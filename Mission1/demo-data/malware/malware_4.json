"{\"count\":3407,\"results\":[{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in E-BOOK Systems FlipViewer 4.0. The vulnerability is caused due to a boundary error in the FViewerLoading (FlipViewerX.dll) ActiveX control when handling the \\\"LoadOpf()\\\" method.\",\"source\":[\"Metasploit\"],\"description\":\"FlipViewer FViewerLoading ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ebook_flipviewer_fviewerloading\",\"discoveryDate\":1.181088E12,\"_id\":8727296},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote attackers to place arbitrary files on a users file system by abusing the \\\"Comp_Download\\\" method in the SAP KWEdit ActiveX Control (kwedit.dll 6400.1.1.41).\",\"source\":[\"Metasploit\"],\"description\":\"EnjoySAP SAP GUI ActiveX Control Arbitrary File Download\",\"name\":\"exploit\\/windows\\/browser\\/enjoysapgui_comp_download\",\"discoveryDate\":1.2397536E12,\"_id\":8728064},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in SAP KWEdit ActiveX Control (kwedit.dll 6400.1.1.41) provided by EnjoySAP GUI. By sending an overly long string to the \\\"PrepareToPostHTML()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"EnjoySAP SAP GUI ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/enjoysapgui_preparetoposthtml\",\"discoveryDate\":1.1835936E12,\"_id\":8729088},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Facebook Photo Uploader 4. By sending an overly long string to the \\\"ExtractIptc()\\\" property located in the ImageUploader4.ocx (4.5.57.0) Control, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Facebook Photo Uploader 4 ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/facebook_extractiptc\",\"discoveryDate\":1.2017376E12,\"_id\":8730112},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the Foxit Reader Plugin, it exists in the npFoxitReaderPlugin.dll module. When loading PDF files from remote hosts, overly long query strings within URLs can cause a stack-based buffer overflow, which can be exploited to execute arbitrary code. This exploit has been tested on Windows 7 SP1 with Firefox 18.0 and Foxit Reader version 5.4.4.11281 (npFoxitReaderPlugin.dll version 2.2.1.530).\",\"source\":[\"Metasploit\"],\"description\":\"Foxit Reader Plugin URL Processing Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/foxit_reader_plugin_url_bof\",\"discoveryDate\":1.3575168E12,\"_id\":8731136},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in GOM Player 2.1.6.3499. By sending an overly long string to the \\\"OpenUrl()\\\" method located in the GomWeb3.dll Control, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"GOM Player ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/gom_openurl\",\"discoveryDate\":1.1934432E12,\"_id\":8731648},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack-based buffer overflow in Green Dam Youth Escort version 3.17 in the way it handles overly long URLs. By setting an overly long URL, an attacker can overrun a buffer and execute arbitrary code. This module uses the .NET DLL memory technique by Alexander Sotirov and Mark Dowd and should bypass DEP, NX and ASLR.\",\"source\":[\"Metasploit\"],\"description\":\"Green Dam URL Processing Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/greendam_url\",\"discoveryDate\":1.2446784E12,\"_id\":8732416},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This modules exploits a vulnerability found in the Honewell HSC Remote Deployer ActiveX. This control can be abused by using the LaunchInstaller() function to execute an arbitrary HTA from a remote location. This module has been tested successfully with the HSC Remote Deployer ActiveX installed with HoneyWell EBI R410.1.\",\"source\":[\"Metasploit\"],\"description\":\"Honeywell HSC Remote Deployer ActiveX Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/honeywell_hscremotedeploy_exec\",\"discoveryDate\":1.3614912E12,\"_id\":8733184},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This modules exploits a vulnerability found in the Honewell Tema ActiveX Remote Installer. This ActiveX control can be abused by using the DownloadFromURL() function to install an arbitrary MSI from a remote location without checking source authenticity or user notification. This module has been tested successfully with the Remote Installer ActiveX installed with HoneyWell EBI R410.1 - TEMA 5.3.0 and Internet Explorer 6, 7 and 8 on Windows XP SP3.\",\"source\":[\"Metasploit\"],\"description\":\"Honeywell Tema Remote Installer ActiveX Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/honeywell_tema_exec\",\"discoveryDate\":1.3190688E12,\"_id\":8733952},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability within the XGO.ocx ActiveX Control installed with the HP Application Lifecycle Manager Client. The vulnerability exists in the SetShapeNodeType method, which allows the user to specify memory that will be used as an object, through the node parameter. It allows to control the dereference and use of a function pointer. This module has been successfully tested with HP Application Lifecycle Manager 11.50 and requires JRE 6 in order to bypass DEP and ASLR.\",\"source\":[\"Metasploit\"],\"description\":\"HP Application Lifecycle Management XGO.ocx ActiveX SetShapeNodeType() Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/hp_alm_xgo_setshapenodetype_exec\",\"discoveryDate\":1.3461984E12,\"_id\":8734720},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote attackers to place arbitrary files on a users file system by abusing the \\\"CacheDocumentXMLWithId\\\" method from the \\\"XMLCacheMgr\\\" class in the HP Easy Printer HPTicketMgr.dll ActiveX Control (HPTicketMgr.dll 2.7.2.0).  Code execution can be achieved by first uploading the payload to the remote machine embeddeding a vbs file, and then upload another mof file, which enables Windows Management Instrumentation service to execute the vbs. Please note that this module currently only works for Windows before Vista.\",\"source\":[\"Metasploit\"],\"description\":\"HP Easy Printer Care XMLCacheMgr Class ActiveX Control Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/hp_easy_printer_care_xmlcachemgr\",\"discoveryDate\":1.32624E12,\"_id\":8735488},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote attackers to place arbitrary files on a users file system by abusing via Directory Traversal attack the \\\"saveXML\\\" method from the \\\"XMLSimpleAccessor\\\" class in the HP Easy Printer HPTicketMgr.dll ActiveX Control (HPTicketMgr.dll 2.7.2.0).  Code execution can be achieved by first uploading the payload to the remote machine embeddeding a vbs file, and then upload another mof file, which enables Windows Management Instrumentation service to execute the vbs. Please note that this module currently only works for Windows before Vista.\",\"source\":[\"Metasploit\"],\"description\":\"HP Easy Printer Care XMLSimpleAccessor Class ActiveX Control Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/hp_easy_printer_care_xmlsimpleaccessor\",\"discoveryDate\":1.3134528E12,\"_id\":8736512},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Persits Software Inc's XUpload ActiveX control(version 3.0.0.3) thats included in HP LoadRunner 9.5. By passing an overly long string to the AddFile method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Persits XUpload ActiveX AddFile Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/hp_loadrunner_addfile\",\"discoveryDate\":1.2012192E12,\"_id\":8737536},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Persits Software Inc's XUpload ActiveX control(version 2.1.0.1) thats included in HP LoadRunner 9.0. By passing an overly long string to the AddFolder method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"HP LoadRunner 9.0 ActiveX AddFolder Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/hp_loadrunner_addfolder\",\"discoveryDate\":1.1985408E12,\"_id\":8738560},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack-based buffer overflow in SPIDERLib.Loader ActiveX control (Spider90.ocx) 9.1.0.4353 installed by TestDirector (TD) for Hewlett-Packard Mercury Quality Center 9.0 before Patch 12.1, and 8.2 SP1 before Patch 32. By setting an overly long value to 'ProgColor', an attacker can overrun a buffer and execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"HP Mercury Quality Center ActiveX Control ProgColor Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/hpmqc_progcolor\",\"discoveryDate\":1.1756448E12,\"_id\":8740352},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack-based buffer overflow within version 1.9.5.1 of Hyleos ChemView (HyleosChemView.ocx). By calling the 'SaveAsMolFile' or 'ReadMolFile' methods with an overly long first argument, an attacker can overrun a buffer and execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Hyleos ChemView ActiveX Control Stack Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/hyleos_chemviewx_activex\",\"discoveryDate\":1.26576E12,\"_id\":8741376},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a heap based buffer overflow in the C1Tab ActiveX control, while handling the TabCaption property. The affected control can be found in the c1sizer.ocx component as included with IBM SPSS SamplePower 3.0. This module has been tested successfully on IE 6, 7 and 8 on Windows XP SP3 and IE 8 on Windows 7 SP1.\",\"source\":[\"Metasploit\"],\"description\":\"IBM SPSS SamplePower C1Tab ActiveX Heap Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ibm_spss_c1sizer\",\"discoveryDate\":1.3669344E12,\"_id\":8742400},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow vulnerability in the Isig.isigCtl.1 ActiveX installed with IBM Tivoli Provisioning Manager Express for Software Distribution 4.1.1.  The vulnerability is found in the \\\"RunAndUploadFile\\\" method where the \\\"OtherFields\\\" parameter with user controlled data is used to build a \\\"Content-Dispoition\\\" header and attach contents in a insecure way which allows to overflow a buffer in the stack.\",\"source\":[\"Metasploit\"],\"description\":\"IBM Tivoli Provisioning Manager Express for Software Distribution Isig.isigCtl.1 ActiveX RunAndUploadFile() Method Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ibm_tivoli_pme_activex_bof\",\"discoveryDate\":1.33056E12,\"_id\":8743424},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in IBM Access Support. When sending an overly long string to the GetXMLValue() method of IbmEgath.dll (3.20.284.0) an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"IBM Access Support ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ibmegath_getxmlvalue\",\"discoveryDate\":1.2378528E12,\"_id\":8744960},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in IBM Lotus Domino Web Access Upload Module. By sending an overly long string to the \\\"General_ServerName()\\\" property located in the dwa7w.dll and the inotes6w.dll control, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"IBM Lotus Domino Web Access Upload Module Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ibmlotusdomino_dwa_uploadmodule\",\"discoveryDate\":1.1981088E12,\"_id\":8746240},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Microsoft Internet Explorer. A use-after-free condition occurs when a CButton object is freed, but a reference is kept and used again during a page reload, an invalid memory that's controllable is used, and allows arbitrary code execution under the context of the user.  Please note: This vulnerability has been exploited in the wild targeting mainly China\\/Taiwan\\/and US-based computers.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Internet Explorer CButton Object Use-After-Free Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/ie_cbutton_uaf\",\"discoveryDate\":1.3565664E12,\"_id\":8747776},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Microsoft Internet Explorer. A use-after-free condition occurs when a CGenericElement object is freed, but a reference is kept on the Document and used again during rendering, an invalid memory that's controllable is used, and allows arbitrary code execution under the context of the user.  Please note: This vulnerability has been exploited in the wild on 2013 May, in the compromise of the Department of Labor (DoL) Website.\",\"source\":[\"Metasploit\"],\"description\":\"MS13-038 Microsoft Internet Explorer CGenericElement Object Use-After-Free Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/ie_cgenericelement_uaf\",\"discoveryDate\":1.3675392E12,\"_id\":8749056},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a generic code execution vulnerability in Internet Explorer by abusing vulnerable ActiveX objects.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer COM CreateObject Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ie_createobject\",\"discoveryDate\":1.1447136E12,\"_id\":8750080},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Microsoft Internet Explorer (MSIE). When rendering an HTML page, the CMshtmlEd object gets deleted in an unexpected manner, but the same memory is reused again later in the CMshtmlEd::Exec() function, leading to a use-after-free condition.  Please note that this vulnerability has been exploited in the wild since Sep 14 2012.  Also note that presently, this module has some target dependencies for the ROP chain to be valid. For WinXP SP3 with IE8, msvcrt must be present (as it is by default). For Vista or Win7 with IE8, or Win7 with IE9, JRE 1.6.x or below must be installed (which is often the case).\",\"source\":[\"Metasploit\"],\"description\":\"MS12-063 Microsoft Internet Explorer execCommand Use-After-Free Vulnerability \",\"name\":\"exploit\\/windows\\/browser\\/ie_execcommand_uaf\",\"discoveryDate\":1.3475808E12,\"_id\":8751616},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Internet Explorer. This bug was patched in Windows 2000 SP4 and Windows XP SP1 according to MSRC.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer isComponentInstalled Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ie_iscomponentinstalled\",\"discoveryDate\":1.1407392E12,\"_id\":8752640},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This exploit takes advantage of the \\\"Initialize and script ActiveX controls not  marked safe for scripting\\\" setting within Internet Explorer. When this option is set,  IE allows access to the WScript.Shell ActiveX control, which allows javascript to  interact with the file system and run commands. This security flaw is not uncommon  in corporate environments for the 'Intranet' or 'Trusted Site' zones. In order to  save binary data to the file system, ADODB.Stream access is required, which in IE7  will trigger a cross domain access violation. As such, we write the code to a .vbs  file and execute it from there, where no such restrictions exist.  When set via domain policy, the most common registry entry to modify is HKLM\\\\  Software\\\\Policies\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\\Zones\\\\1\\\\1201,  which if set to '0' forces ActiveX controls not marked safe for scripting to be  enabled for the Intranet zone.  This module creates a javascript\\/html hybrid that will render correctly either  via a direct GET http:\\/\\/msf-server\\/ or as a javascript include, such as in:  http:\\/\\/intranet-server\\/xss.asp?id=\\\"><script%20src=http:\\/\\/10.10.10.10\\/ie_unsafe_script.js>  <\\/script>.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Unsafe Scripting Misconfiguration\",\"name\":\"exploit\\/windows\\/browser\\/ie_unsafe_scripting\",\"discoveryDate\":1.2849408E12,\"_id\":8753920},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack based buffer overflow in the Active control file ImageViewer2.OCX by passing a overly long argument to an insecure TifMergeMultiFiles() method. Exploitation results in code execution with the privileges of the user who browsed to the exploit page.  The victim will first be required to trust the publisher Viscom Software. This module has been designed to bypass DEP and ASLR under XP IE8, Vista and Win7 with Java support.\",\"source\":[\"Metasploit\"],\"description\":\"Viscom Image Viewer CP Pro 8.0\\/Gold 6.0 ActiveX Control\",\"name\":\"exploit\\/windows\\/browser\\/imgeviewer_tifmergemultifiles\",\"discoveryDate\":1.2675744E12,\"_id\":8754688},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a heap overflow found in InduSoft Web Studio <= 61.6.00.00 SP6. The overflow exists in the ISSymbol.ocx, and can be triggered with a long string argument for the InternationalSeparator() method of the ISSymbol control. This modules uses the msvcr71.dll form the Java JRE6 to bypass ASLR.\",\"source\":[\"Metasploit\"],\"description\":\"InduSoft Web Studio ISSymbol.ocx InternationalSeparator() Heap Overflow\",\"name\":\"exploit\\/windows\\/browser\\/indusoft_issymbol_internationalseparator\",\"discoveryDate\":1.3355712E12,\"_id\":8755200},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow vulnerability on the UploadControl ActiveX. The vulnerability exists in the handling of the \\\"Attachment_Times\\\" property, due to the insecure usage of the _swscanf. The affected ActiveX is provided by the dwa85W.dll installed with the IBM Lotus iNotes ActiveX installer.  This module has been tested successfully on IE6-IE9 on Windows XP, Vista and 7, using the dwa85W.dll 85.3.3.0 as installed with Lotus Domino 8.5.3.  In order to bypass ASLR the no aslr compatible module dwabho.dll is used. This one is installed with the iNotes ActiveX.\",\"source\":[\"Metasploit\"],\"description\":\"IBM Lotus iNotes dwa85W ActiveX Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/inotes_dwa85w_bof\",\"discoveryDate\":1.3385088E12,\"_id\":8756224},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an uninitialized variable vulnerability in the Annotation Objects ActiveX component. The activeX component loads into memory without opting into ALSR so this module exploits the vulnerability against windows Vista and Windows 7 targets. A large heap spray is required to fulfill the requirement that EAX points to part of the ROP chain in a heap chunk and the calculated call will hit the pivot in a separate heap chunk. This will take some time in the users browser.\",\"source\":[\"Metasploit\"],\"description\":\"Quest InTrust Annotation Objects Uninitialized Pointer\",\"name\":\"exploit\\/windows\\/browser\\/intrust_annotatex_add\",\"discoveryDate\":1.3328928E12,\"_id\":8757248},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in Java Runtime Environment  that allows an attacker to escape the Java Sandbox. By injecting  a parameter into a javaws call within the BasicServiceImpl class  the default java sandbox policy file can be therefore overwritten.  The vulnerability affects version 6 prior to update 22.   NOTE: Exploiting this vulnerability causes several sinister-looking  popup windows saying that Java is \\\"Downloading application.\\\"\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java Web Start BasicServiceImpl Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/java_basicservice_impl\",\"discoveryDate\":1.2868416E12,\"_id\":8757760},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module abuses the Color Management classes from a Java Applet to run arbitrary Java code outside of the sandbox as exploited in the wild in February and March of 2013. The vulnerability affects Java version 7u15 and earlier and 6u41 and earlier and has been tested successfully on Windows XP SP3 and Windows 7 SP1 systems. This exploit doesn't bypass click-to-play, so the user must accept the java warning in order to run the malicious applet.\",\"source\":[\"Metasploit\"],\"description\":\"Java CMM Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/java_cmm\",\"discoveryDate\":1.362096E12,\"_id\":8759040},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the Java Runtime Environment that allows an attacker to run an applet outside of the Java Sandbox. When an applet is invoked with:  1. A \\\"codebase\\\" parameter that points at a trusted directory 2. A \\\"code\\\" parameter that is a URL that does not contain any dots  the applet will run outside of the sandbox.  This vulnerability affects JRE prior to version 6 update 24.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java Applet2ClassLoader Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/java_codebase_trust\",\"discoveryDate\":1.297728E12,\"_id\":8760064},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the new plugin component of the Sun Java Runtime Environment before v6 Update 22. By specifying specific parameters to the new plugin, an attacker can cause a stack-based buffer overflow and execute arbitrary code.  When the new plugin is invoked with a \\\"launchjnlp\\\" parameter, it will copy the contents of the \\\"docbase\\\" parameter to a stack-buffer using the \\\"sprintf\\\" function. A string of 396 bytes is enough to overflow the 256 byte stack buffer and overwrite some local variables as well as the saved return address.  NOTE: The string being copied is first passed through the \\\"WideCharToMultiByte\\\". Due to this, only characters which have a valid localized multibyte representation are allowed. Invalid characters will be replaced with question marks ('?').  This vulnerability was originally discovered independently by both Stephen Fewer and Berend Jan Wever (SkyLined). Although exhaustive testing hasn't been done, all versions since version 6 Update 10 are believed to be affected by this vulnerability.  This vulnerability was patched as part of the October 2010 Oracle Patch release.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java Runtime New Plugin docbase Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/java_docbase_bof\",\"discoveryDate\":1.2868416E12,\"_id\":8761344},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw within the handling of MixerSequencer objects in Java 6u18 and before.  Exploitation id done by supplying a specially crafted MIDI file within an RMF File. When the MixerSequencer objects is used to play the file, the GM_Song structure is populated with a function pointer provided by a SONG block in the RMF. A Midi block that contains a MIDI with a specially crafted controller event is used to trigger the vulnerability.  When triggering the vulnerability \\\"ebx\\\" points to a fake event in the MIDI file which stores the shellcode. A \\\"jmp ebx\\\" from msvcr71.dll is used to make the exploit reliable over java updates.\",\"source\":[\"Metasploit\"],\"description\":\"Java MixerSequencer Object GM_Song Structure Handling Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/java_mixer_sequencer\",\"discoveryDate\":1.2699072E12,\"_id\":8762368},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the Web Start plugin component of Sun Java Web Start. The arguments passed to Java Web Start are not properly validated. By passing the lesser known -J option, an attacker can pass arbitrary options directly to the Java runtime. By utilizing the -XXaltjvm option, as discussed by Ruben Santamarta, an attacker can execute arbitrary code in the context of an unsuspecting browser user.  This vulnerability was originally discovered independently by both Ruben Santamarta and Tavis Ormandy. Tavis reported that all versions since version 6 Update 10 \\\"are believed to be affected by this vulnerability.\\\"  In order for this module to work, it must be ran as root on a server that does not serve SMB. Additionally, the target host must have the WebClient service (WebDAV Mini-Redirector) enabled.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java Web Start Plugin Command Line Argument Injection\",\"name\":\"exploit\\/windows\\/browser\\/java_ws_arginject_altjvm\",\"discoveryDate\":1.2707712E12,\"_id\":8763392},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the Web Start component of the Sun Java Runtime Environment. The arguments passed to Java Web Start are not properly validated, allowing injection of arbitrary arguments to the JVM.  By utilizing the lesser known -J option, an attacker can take advantage of the -XXaltjvm option, as discussed previously by Ruben Santamarta. This method allows an attacker to execute arbitrary code in the context of an unsuspecting browser user.  In order for this module to work, it must be ran as root on a server that does not serve SMB. Additionally, the target host must have the WebClient service (WebDAV Mini-Redirector) enabled.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java Web Start Plugin Command Line Argument Injection\",\"name\":\"exploit\\/windows\\/browser\\/java_ws_vmargs\",\"discoveryDate\":1.3291776E12,\"_id\":8764928},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the JuniperSetupDLL.dll library which is called by the JuniperSetup.ocx ActiveX control, as part of the Juniper SSL-VPN (IVE) appliance. By specifying an overly long string to the ProductName object parameter, the stack is overwritten.\",\"source\":[\"Metasploit\"],\"description\":\"Juniper SSL-VPN IVE JuniperSetupDLL.dll ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/juniper_sslvpn_ive_setupdll\",\"discoveryDate\":1.1460096E12,\"_id\":8765952},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the Altnet Download Manager ActiveX Control (amd4.dll) bundled with Kazaa Media Desktop 3.2.7. By sending a overly long string to the \\\"Install()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Kazaa Altnet Download Manager ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/kazaa_altnet_heap\",\"discoveryDate\":1.1913696E12,\"_id\":8766720},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in the KeyScript ActiveX control from keyhelp.ocx. It is packaged in several products or GE, such as Proficy Historian 4.5, 4.0, 3.5, and 3.1, Proficy HMI\\/SCADA 5.1 and 5.0, Proficy Pulse 1.0, Proficy Batch Execution 5.6, and SI7 I\\/O Driver between 7.20 and 7.42. When the control is installed with these products, the function \\\"LaunchTriPane\\\" will use ShellExecute to launch \\\"hh.exe\\\", with user controlled data as parameters. Because of this, the \\\"-decompile\\\" option can be abused to write arbitrary files on the remote system.  Code execution can be achieved by first uploading the payload to the remote machine, and then upload another mof file, which enables Windows Management Instrumentation service to execute it. Please note that this module currently only works for Windows before Vista.  On the other hand, the target host must have the WebClient service (WebDAV Mini-Redirector) enabled. It is enabled and automatically started by default on Windows XP SP3\",\"source\":[\"Metasploit\"],\"description\":\"KeyHelp ActiveX LaunchTriPane Remote Code Execution Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/keyhelp_launchtripane_exec\",\"discoveryDate\":1.3406688E12,\"_id\":8767744},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the Logitech VideoCall ActiveX Control (wcamxmp.dll 2.0.3470.448). By sending a overly long string to the \\\"Start()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Logitech VideoCall ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/logitechvideocall_start\",\"discoveryDate\":1.1805696E12,\"_id\":8768768},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in LPViewer ActiveX control (LPControll.dll 3.2.0.2). When sending an overly long string to the URL() property an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"iseemedia \\/ Roxio \\/ MGI Software LPViewer ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/lpviewer_url\",\"discoveryDate\":1.2232512E12,\"_id\":8770304},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Macrovision InstallShield Update Service(Isusweb.dll 6.0.100.54472). By passing an overly long ProductCode string to the DownloadAndExecute method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Macrovision InstallShield Update Service Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/macrovision_downloadandexecute\",\"discoveryDate\":1.1937888E12,\"_id\":8771328},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows attackers to execute code via an unsafe methods in Macrovision InstallShield 2008.\",\"source\":[\"Metasploit\"],\"description\":\"Macrovision InstallShield Update Service ActiveX Unsafe Method\",\"name\":\"exploit\\/windows\\/browser\\/macrovision_unsafe\",\"discoveryDate\":1.1928384E12,\"_id\":8772352},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Cross Context Scripting (XCS) is possible in the Maxthon about:history page. Injection in such privileged\\/trusted browser zone can be used to modify configuration settings and execute arbitrary commands.  Please note this module only works against specific versions of XCS. Currently, we've only successfully tested on Maxthon 3.1.7 build 600 up to 3.2.2 build 1000.\",\"source\":[\"Metasploit\"],\"description\":\"Maxthon3 about:history XCS Trusted Zone Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/maxthon_history_xcs\",\"discoveryDate\":1.353888E12,\"_id\":8772864},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the McAfee Subscription Manager ActiveX control. Due to an unsafe use of vsprintf, it is possible to trigger a stack buffer overflow by passing a large string to one of the COM-exposed routines, such as IsAppExpired. This vulnerability was discovered by Karl Lynn of eEye.\",\"source\":[\"Metasploit\"],\"description\":\"McAfee Subscription Manager Stack Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/mcafee_mcsubmgr_vsprintf\",\"discoveryDate\":1.1543904E12,\"_id\":8773376},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This modules exploits a vulnerability found in McAfee Virtual Technician's MVTControl. This ActiveX control can be abused by using the GetObject() function to load additional unsafe classes such as WScript.Shell, therefore allowing remote code execution under the context of the user.\",\"source\":[\"Metasploit\"],\"description\":\"McAfee Virtual Technician MVTControl 6.3.0.1911 GetObject Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/mcafee_mvt_exec\",\"discoveryDate\":1.335744E12,\"_id\":8774400},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the McAfee Visual Trace 3.25 ActiveX Control (NeoTraceExplorer.dll 1.0.0.1). By sending a overly long string to the \\\"TraceTarget()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"McAfee Visual Trace ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/mcafeevisualtrace_tracetarget\",\"discoveryDate\":1.1837664E12,\"_id\":8774912},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in mIRC 6.1. By submitting an overly long and specially crafted URL to the 'irc' protocol, an attacker can overwrite the buffer and control program execution.\",\"source\":[\"Metasploit\"],\"description\":\"mIRC IRC URL Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/mirc_irc_url\",\"discoveryDate\":1.0660032E12,\"_id\":8776192},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a use-after-free vulnerability in Firefox 8\\/8.0.1 and 9\\/9.0.1. Removal of child nodes from the nsDOMAttribute can allow for a child to still be accessible after removal due to a premature notification of AttributeChildRemoved. Since mFirstChild is not set to NULL until after this call is made, this means the removed child will be accessible after it has been removed. By carefully manipulating the memory layout, this can lead to arbitrary code execution.\",\"source\":[\"Metasploit\"],\"description\":\"Firefox 8\\/9 AttributeChildRemoved() Use-After-Free\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_attribchildremoved\",\"discoveryDate\":1.3231296E12,\"_id\":8776960},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in Mozilla Firefox caused by interleaved calls to document.write and appendChild. This module was written based on a live exploit found in the wild.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Firefox Interleaved document.write\\/appendChild Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_interleaved_write\",\"discoveryDate\":1.2879648E12,\"_id\":8777984},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an use after free vulnerability in Mozilla Firefox 3.6.16. An OBJECT Element mChannel can be freed via the OnChannelRedirect method of the nsIChannelEventSink Interface. mChannel becomes a dangling pointer and can be reused when setting the OBJECTs data attribute. (Discovered by regenrecht). This module uses heapspray with a minimal ROP chain to bypass DEP on Windows XP SP3. Additionlay, a windows 7 target was provided using JAVA 6 and below to avoid aslr.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Firefox 3.6.16 mChannel Use-After-Free Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_mchannel\",\"discoveryDate\":1.3049856E12,\"_id\":8779008},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an out-of-bounds access flaw in Firefox 7 and 8 (<= 8.0.1). The notification of nsSVGValue observers via nsSVGValue::NotifyObservers(x,y) uses a loop which can result in an out-of-bounds access to attacker-controlled memory. The mObserver ElementAt() function (which picks up pointers), does not validate if a given index is out of bound. If a custom observer of nsSVGValue is created, which removes elements from the original observer, and memory layout is manipulated properly, the ElementAt() function might pick up an attacker provided pointer, which can be leveraged to gain remote arbitrary code execution.\",\"source\":[\"Metasploit\"],\"description\":\"Firefox 7\\/8 (<= 8.0.1) nsSVGValue Out-of-Bounds Access Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_nssvgvalue\",\"discoveryDate\":1.3231296E12,\"_id\":8779520},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in Mozilla Firefox 3.6.x <= 3.6.16 and 3.5.x <= 3.5.17 found in nsTreeSelection. By overwriting a subfunction of invalidateSelection it is possible to free the nsTreeRange object that the function currently operates on. Any further operations on the freed object can result in remote code execution. Utilizing the call setup the function provides it's possible to bypass DEP without the need for a ROP. Sadly this exploit is still either dependent on Java or bound by ASLR because Firefox doesn't employ any ASLR-free modules anymore.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Firefox \\\"nsTreeRange\\\" Dangling Pointer Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_nstreerange\",\"discoveryDate\":1.2966048E12,\"_id\":8780800},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Mozilla Firefox 3.6. When an array object is configured with a large length value, the reduceRight() method may cause an invalid index being used, allowing abitrary remote code execution. Please note that the exploit requires a longer amount of time (compare to a typical browser exploit) in order to gain control of the machine.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Firefox Array.reduceRight() Integer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/mozilla_reduceright\",\"discoveryDate\":1.3086144E12,\"_id\":8782336},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in Internet Explorer's handling of the OBJECT type attribute.\",\"source\":[\"Metasploit\"],\"description\":\"MS03-020 Internet Explorer Object Type\",\"name\":\"exploit\\/windows\\/browser\\/ms03_020_ie_objecttype\",\"discoveryDate\":1.0546848E12,\"_id\":8783616},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This bug is triggered when the browser handles a JavaScript 'onLoad' handler in conjunction with an improperly initialized 'window()' JavaScript function. This exploit results in a call to an address lower than the heap. The javascript prompt() places our shellcode near where the call operand points to. We call prompt() multiple times in separate iframes to place our return address. We hide the prompts in a popup window behind the main window. We spray the heap a second time with our shellcode and point the return address to the heap. I use a fairly high address to make this exploit more reliable. IE will crash when the exploit completes. Also, please note that Internet Explorer must allow popups in order to continue exploitation.\",\"source\":[\"Metasploit\"],\"description\":\"MS05-054 Microsoft Internet Explorer JavaScript OnLoad Handler Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms05_054_onload\",\"discoveryDate\":1.1325312E12,\"_id\":8784640},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the GDI library included with Windows XP and 2003. This vulnerability uses the 'Escape' metafile function to execute arbitrary code through the SetAbortProc procedure. This module generates a random WMF record stream for each request.\",\"source\":[\"Metasploit\"],\"description\":\"Windows XP\\/2003\\/Vista Metafile Escape() SetAbortProc Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms06_001_wmf_setabortproc\",\"discoveryDate\":1.1356416E12,\"_id\":8786176},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in Microsoft Internet Explorer. Both IE6 and IE7 (Beta 2) are vulnerable. It will corrupt memory in a way, which, under certain circumstances, can lead to an invalid\\/corrupt table pointer dereference. EIP will point to a very remote, non-existent memory location. This module is the result of merging three different exploit submissions and has only been reliably tested against Windows XP SP2. This vulnerability was independently discovered by multiple parties. The heap spray method used by this exploit was pioneered by Skylined.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer createTextRange() Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms06_013_createtextrange\",\"discoveryDate\":1.1427264E12,\"_id\":8786944},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in Microsoft Internet Explorer using a buffer overflow in the VML processing code (VGX.dll). This module has been tested on Windows 2000 SP4, Windows XP SP0, and Windows XP SP2.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer VML Fill Method Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms06_055_vml_method\",\"discoveryDate\":1.158624E12,\"_id\":8788224},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the WebViewFolderIcon ActiveX control  included with Windows 2000, Windows XP, and Windows 2003. This flaw was published  during the Month of Browser Bugs project (MoBB #18).\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer WebViewFolderIcon setSlice() Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms06_057_webview_setslice\",\"discoveryDate\":1.1530944E12,\"_id\":8789248},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a heap overflow vulnerability in the KeyFrame method of the direct animation ActiveX control. This is a port of the exploit implemented by Alexander Sotirov.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Daxctle.OCX KeyFrame Method Heap Buffer Overflow Vulnerability\",\"name\":\"exploit\\/windows\\/browser\\/ms06_067_keyframe\",\"discoveryDate\":1.1634624E12,\"_id\":8790528},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in Microsoft XML Core Services which exists in the XMLHTTP ActiveX control. This module is the modifed version of http:\\/\\/www.milw0rm.com\\/exploits\\/2743 - credit to str0ke. This module has been successfully tested on Windows 2000 SP4, Windows XP SP2, Windows 2003 Server SP0 with IE6 + Microsoft XML Core Services 4.0 SP2.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer XML Core Services HTTP Request Handling\",\"name\":\"exploit\\/windows\\/browser\\/ms06_071_xml_core\",\"discoveryDate\":1.1604384E12,\"_id\":8791296},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow vulnerability in the LoadAniIcon() function in USER32.dll. The flaw can be triggered through Internet Explorer 6 and 7 by using the CURSOR style sheet directive to load a malicious .ANI file. The module can also exploit Mozilla Firefox by using a UNC path in a moz-icon URL and serving the .ANI file over WebDAV. The vulnerable code in USER32.dll will catch any exceptions that occur while the invalid cursor is loaded, causing the exploit to silently fail when the wrong target has been chosen.  This vulnerability was discovered by Alexander Sotirov of Determina and was rediscovered, in the wild, by McAfee.\",\"source\":[\"Metasploit\"],\"description\":\"Windows ANI LoadAniIcon() Chunk Size Stack Buffer Overflow (HTTP)\",\"name\":\"exploit\\/windows\\/browser\\/ms07_017_ani_loadimage_chunksize\",\"discoveryDate\":1.17504E12,\"_id\":8792320},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote attackers to place arbitrary files on a users file system via the Microsoft Office Snapshot Viewer ActiveX Control.\",\"source\":[\"Metasploit\"],\"description\":\"Snapshot Viewer for Microsoft Access ActiveX Control Arbitrary File Download\",\"name\":\"exploit\\/windows\\/browser\\/ms08_041_snapshotviewer\",\"discoveryDate\":1.2153888E12,\"_id\":8793344},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Windows Media Encoder 9. When sending an overly long string to the GetDetailsString() method of wmex.dll an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Windows Media Encoder 9 wmex.dll ActiveX Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms08_053_mediaencoder\",\"discoveryDate\":1.2209184E12,\"_id\":8794368},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Microsoft's Visual Studio 6.0. When passing a specially crafted string to the Mask parameter of the Mdmask32.ocx ActiveX Control, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Visual Studio Mdmask32.ocx ActiveX Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms08_070_visual_studio_msmask\",\"discoveryDate\":1.2185856E12,\"_id\":8795392},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the data binding feature of Internet  Explorer. In order to execute code reliably, this module uses the .NET DLL  memory technique pioneered by Alexander Sotirov and Mark Dowd. This method is  used to create a fake vtable at a known location with all methods pointing  to our payload. Since the .text segment of the .NET DLL is non-writable, a  prefixed code stub is used to copy the payload into a new memory segment and  continue execution from there.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Data Binding Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms08_078_xml_corruption\",\"discoveryDate\":1.228608E12,\"_id\":8796672},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an error related to the CFunctionPointer function when attempting to access uninitialized memory. A remote attacker could exploit this vulnerability to corrupt memory and execute arbitrary code on the system with the privileges of the victim.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer 7 CFunctionPointer Uninitialized Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms09_002_memory_corruption\",\"discoveryDate\":1.234224E12,\"_id\":8797952},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow in Microsoft's Office Web Components. When passing an overly long string as the \\\"HTMLURL\\\" parameter an attacker can execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft OWC Spreadsheet HTMLURL Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms09_043_owc_htmlurl\",\"discoveryDate\":1.2499488E12,\"_id\":8799232},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption vulnerability within versions 10 and 11 of the Office Web Component Spreadsheet ActiveX control. This module was based on an exploit found in the wild.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft OWC Spreadsheet msDataSourceObject Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms09_043_owc_msdso\",\"discoveryDate\":1.2474432E12,\"_id\":8800768},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the getElementsByTagName function  as implemented within Internet Explorer.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Style getElementsByTagName Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms09_072_style_object\",\"discoveryDate\":1.2586752E12,\"_id\":8802304},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption flaw in Internet Explorer. This flaw was found in the wild and was a key component of the \\\"Operation Aurora\\\" attacks that lead to the compromise of a number of high profile companies. The exploit code is a direct port of the public sample published to the Wepawet malware analysis site. The technique used by this module is currently identical to the public sample, as such, only Internet Explorer 6 can be reliably exploited.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer \\\"Aurora\\\" Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms10_002_aurora\",\"discoveryDate\":1.2634272E12,\"_id\":8804096},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Internet Explorer's mshtml component. Due to the way IE handles objects in memory, it is possible to cause a pointer in CTableRowCellsCollectionCacheItem::GetNext to be used even after it gets freed, therefore allowing remote code execution under the context of the user.  This particular vulnerability was also one of 2012's Pwn2Own challenges, and was later explained by Peter Vreugdenhil with exploitation details. Instead of Peter's method, this module uses heap spraying like the 99% to store a specially crafted memory layout before re-using the freed memory.\",\"source\":[\"Metasploit\"],\"description\":\"MS10-002 Internet Explorer Object Memory Use-After-Free\",\"name\":\"exploit\\/windows\\/browser\\/ms10_002_ie_object\",\"discoveryDate\":1.264032E12,\"_id\":8805632},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a use-after-free vulnerability within the DHTML behaviors functionality of Microsoft Internet Explorer versions 6 and 7. This bug was discovered being used in-the-wild and was previously known as the \\\"iepeers\\\" vulnerability. The name comes from Microsoft's suggested workaround to block access to the iepeers.dll file.  According to Nico Waisman, \\\"The bug itself is when trying to persist an object using the setAttribute, which end up calling VariantChangeTypeEx with both the source and the destination being the same variant. So if you send as a variant an IDISPATCH the algorithm will try to do a VariantClear of the destination before using it. This will end up on a call to PlainRelease which deref the reference and clean the object.\\\"  NOTE: Internet Explorer 8 and Internet Explorer 5 are not affected.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer DHTML Behaviors Use After Free\",\"name\":\"exploit\\/windows\\/browser\\/ms10_018_ie_behaviors\",\"discoveryDate\":1.2680928E12,\"_id\":8806912},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption vulnerability in the Internet Explorer Tabular Data ActiveX Control. Microsoft reports that version 5.01 and 6 of Internet Explorer are vulnerable.  By specifying a long value as the \\\"DataURL\\\" parameter to this control, it is possible to write a NUL byte outside the bounds of an array. By targeting control flow data on the stack, an attacker can execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Tabular Data Control ActiveX Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms10_018_ie_tabular_activex\",\"discoveryDate\":1.2680928E12,\"_id\":8807936},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability that occurs when a user presses F1 on MessageBox originated from VBscript within a web page. When the user hits F1, the MessageBox help functionaility will attempt to load and use a HLP file from an SMB or WebDAV (if the WebDAV redirector is enabled) server.  This particular version of the exploit implements a WebDAV server that will serve HLP file as well as a payload EXE. During testing warnings about the payload EXE being unsigned were witnessed. A future version of this module might use other methods that do not create such a warning.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer Winhlp32.exe MsgBox Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms10_022_ie_vbscript_winhlp32\",\"discoveryDate\":1.2671424E12,\"_id\":8808960},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overlow in l3codecx.ax while processing a AVI files with MPEG Layer-3 audio contents. The overflow only allows to overwrite with 0's so the three least significant bytes of EIP saved on stack are overwritten and shellcode is mapped using the .NET DLL memory technique pioneered by Alexander Sotirov and Mark Dowd.  Please note on IE 8 targets, your malicious URL must be a trusted site in order to load the .Net control.\",\"source\":[\"Metasploit\"],\"description\":\"MS10-026 Microsoft MPEG Layer-3 Audio Stack Based Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms10_026_avi_nsamplespersec\",\"discoveryDate\":1.2711168E12,\"_id\":8809984},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Help and Support Center is the default application provided to access online documentation for Microsoft Windows. Microsoft supports accessing help documents directly via URLs by installing a protocol handler for the scheme \\\"hcp\\\". Due to an error in validation of input to hcp:\\/\\/ combined with a local cross site scripting vulnerability and a specialized mechanism to launch the XSS trigger, arbitrary command execution can be achieved.  On IE7 on XP SP2 or SP3, code execution is automatic. If WMP9 is installed, it can be used to launch the exploit automatically. If IE8 and WMP11, either can be used to launch the attack, but both pop dialog boxes asking the user if execution should continue. This exploit detects if non-intrusive mechanisms are available and will use one if possible. In the case of both IE8 and WMP11, the exploit defaults to using an iframe on IE8, but is configurable by setting the DIALOGMECH option to \\\"none\\\" or \\\"player\\\".  This module creates a WebDAV service from which the payload is copied to the victim machine.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Help Center XSS and Command Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms10_042_helpctr_xss_cmd_exec\",\"discoveryDate\":1.2760416E12,\"_id\":8811008},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the handling of Windows Shortcut files (.LNK) that contain an icon resource pointing to a malicious DLL. This module creates a WebDAV service that can be used to run an arbitrary payload when accessed as a UNC path.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Windows Shell LNK Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms10_046_shortcut_icon_dllloader\",\"discoveryDate\":1.2792384E12,\"_id\":8812032},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Thie module exploits a memory corruption vulnerability within Microsoft's HTML engine (mshtml). When parsing an HTML page containing a specially crafted CSS tag, memory corruption occurs that can lead arbitrary code execution.  It seems like Microsoft code inadvertantly increments a vtable pointer to point to an unaligned address within the vtable's function pointers. This leads to the program counter being set to the address determined by the address \\\"[vtable+0x30+1]\\\". The particular address depends on the exact version of the mshtml library in use.  Since the address depends on the version of mshtml, some versions may not be exploitable. Specifically, those ending up with a program counter value within another module, in kernel space, or just not able to be reached with various memory spraying techniques.  Also, since the address is not controllable, it is unlikely to be possible to use ROP to bypass non-executable memory protections.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer CSS SetUserClip Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms10_090_ie_css_clip\",\"discoveryDate\":1.2887424E12,\"_id\":8812800},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption vulnerability within Microsoft\\\\'s HTML engine (mshtml). When parsing an HTML page containing a recursive CSS import, a C++ object is deleted and later reused. This leads to arbitrary code execution.  This exploit utilizes a combination of heap spraying and the .NET 2.0 'mscorie.dll' module to bypass DEP and ASLR. This module does not opt-in to ASLR. As such, this module should be reliable on all Windows versions with .NET 2.0.50727 installed.\",\"source\":[\"Metasploit\"],\"description\":\"Internet Explorer CSS Recursive Import Use After Free\",\"name\":\"exploit\\/windows\\/browser\\/ms11_003_ie_css_import\",\"discoveryDate\":1.2909888E12,\"_id\":8814080},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a use-after-free vulnerability in Internet Explorer. The vulnerability occurs when an invalid <object> tag exists and other elements overlap\\/cover where the object tag should be when rendered (due to their styles\\/positioning). The mshtml!CObjectElement is then freed from memory because it is invalid. However, the mshtml!CDisplay object for the page continues to keep a reference to the freed <object> and attempts to call a function on it, leading to the use-after-free.  Please note that for IE 8 targets, JRE (Java Runtime Environment) is required to bypass DEP (Data Execution Prevention).\",\"source\":[\"Metasploit\"],\"description\":\"MS11-050 IE mshtml!CObjectElement Use After Free\",\"name\":\"exploit\\/windows\\/browser\\/ms11_050_mshtml_cobjectelement\",\"discoveryDate\":1.3081824E12,\"_id\":8814848},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in Microsoft Internet Explorer. A memory corruption may occur when the Option cache isn't updated properly, which allows other JavaScript methods to access a deleted Option element, and results in code execution under the context of the user.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Internet Explorer Option Element Use-After-Free\",\"name\":\"exploit\\/windows\\/browser\\/ms11_081_option\",\"discoveryDate\":1.3499136E12,\"_id\":8815872},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a type confusion vulnerability in the OLE32 component of Windows XP SP3. The vulnerability exists in the CPropertyStorage::ReadMultiple function.  A Visio document with a specially crafted Summary Information Stream embedded allows to get remote code execution through Internet Explorer, on systems with Visio Viewer installed.\",\"source\":[\"Metasploit\"],\"description\":\"MS11-093 Microsoft Windows OLE Object File Handling Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/ms11_093_ole32\",\"discoveryDate\":1.3237344E12,\"_id\":8816896},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a heap overflow vulnerability in the Windows Multimedia Library (winmm.dll). The vulnerability occurs when parsing specially crafted MIDI files. Remote code execution can be achieved by using the Windows Media Player ActiveX control.  Exploitation is done by supplying a specially crafted MIDI file with specific events, causing the offset calculation being higher than what is available on the heap (0x400 allocated by WINMM!winmmAlloc), and then allowing us to either \\\"inc al\\\" or \\\"dec al\\\" a byte. This can be used to corrupt an array (CImplAry) we setup, and force the browser to confuse types from tagVARIANT objects, which leverages remote code execution under the context of the user.  Note: At this time, for IE 8 target, msvcrt ROP is used by default. However, if you know your target's patch level, you may also try the 'MSHTML' advanced option for an info leak based attack. Currently, this module only supports two MSHTML builds: 8.0.6001.18702, which is often seen in a newly installed XP SP3. Or 8.0.6001.19120, which is patch level before the MS12-004 fix.  Also, based on our testing, the vulnerability does not seem to trigger when the victim machine is operated via rdesktop.\",\"source\":[\"Metasploit\"],\"description\":\"MS12-004 midiOutPlayNextPolyEvent Heap Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms12_004_midi\",\"discoveryDate\":1.3261536E12,\"_id\":8817664},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a heap overflow vulnerability in Internet Explorer caused by an incorrect handling of the span attribute for col elements from a fixed table, when they are modified dynamically by javascript code.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Internet Explorer Fixed Table Col Span Heap Overflow\",\"name\":\"exploit\\/windows\\/browser\\/ms12_037_ie_colspan\",\"discoveryDate\":1.3394592E12,\"_id\":8819200},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption flaw in Internet Explorer 8 when handling objects with the same ID property. At the moment this module targets IE8 over Windows XP SP3 and Windows 7. This module supports heap massaging as well as the heap spray method seen in the wild (Java msvcrt71.dll).\",\"source\":[\"Metasploit\"],\"description\":\"MS12-037 Internet Explorer Same ID Property Deleted Object Handling Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/ms12_037_same_id\",\"discoveryDate\":1.3394592E12,\"_id\":8820736},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a use-after-free vulnerability in Microsoft Internet Explorer where a CParaElement node is released but a reference is still kept in CDoc. This memory is reused when a CDoc relayout is performed.\",\"source\":[\"Metasploit\"],\"description\":\"MS13-009 Microsoft Internet Explorer SLayoutRun Use-After-Free\",\"name\":\"exploit\\/windows\\/browser\\/ms13_009_ie_slayoutrun_uaf\",\"discoveryDate\":1.3607136E12,\"_id\":8821504},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption within the MSVidCtl component of Microsoft DirectShow (BDATuner.MPEG2TuneRequest). By loading a specially crafted GIF file, an attacker can overrun a buffer and execute arbitrary code.  ClassID is now configurable via an advanced option (otherwise randomized) - I)ruid\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft DirectShow (msvidctl.dll) MPEG-2 Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/msvidctl_mpeg2\",\"discoveryDate\":1.246752E12,\"_id\":8822528},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Microsoft Whale Intelligent Application Gateway Whale Client. When sending an overly long string to CheckForUpdates() method of WhlMgr.dll (3.1.502.64) an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Microsoft Whale Intelligent Application Gateway ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/mswhale_checkforupdates\",\"discoveryDate\":1.2397536E12,\"_id\":8823552},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a memory corruption flaw in Microsoft XML Core Services when trying to access an uninitialized Node with the getDefinition API, which may corrupt memory allowing remote code execution.\",\"source\":[\"Metasploit\"],\"description\":\"MS12-043 Microsoft XML Core Services MSXML Uninitialized Memory Corruption\",\"name\":\"exploit\\/windows\\/browser\\/msxml_get_definition_code_exec\",\"discoveryDate\":1.3394592E12,\"_id\":8824576},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the NCTAudioFile2.Audio ActiveX Control provided by various audio applications. By sending an overly long string to the \\\"SetFormatLikeSample()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"NCTAudioFile2 v2.x ActiveX Control SetFormatLikeSample() Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/nctaudiofile2_setformatlikesample\",\"discoveryDate\":1.1695968E12,\"_id\":8825600},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Norton AntiSpam 2004. When sending an overly long string to the LaunchCustomRuleWizard() method of symspam.dll (2004.1.0.147) an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Norton AntiSpam 2004 SymSpamHelper ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/nis2004_antispam\",\"discoveryDate\":1.0796544E12,\"_id\":8826368},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in the ISAlertDataCOM ActiveX Control (ISLAert.dll) provided by Symantec Norton Internet Security 2004. By sending a overly long string to the \\\"Get()\\\" method, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Symantec Norton Internet Security 2004 ActiveX Control Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/nis2004_get\",\"discoveryDate\":1.1792736E12,\"_id\":8827392},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This modules exploits a command injection vulnerability in the URL handler for for the IBM Lotus Notes Client <= 8.5.3. The registered handler can be abused with an specially crafted notes:\\/\\/ URL to execute arbitrary commands with also arbitrary arguments. This module has been tested successfully on Windows XP SP3 with IE8, Google Chrome 23.0.1271.97 m and IBM Lotus Notes Client 8.5.2.\",\"source\":[\"Metasploit\"],\"description\":\"IBM Lotus Notes Client URL Handler Command Injection\",\"name\":\"exploit\\/windows\\/browser\\/notes_handler_cmdinject\",\"discoveryDate\":1.3399776E12,\"_id\":8828416},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the Novell GroupWise Client gwcls1.dll ActiveX. Several methods in the GWCalServer control use user provided data as a pointer, which allows to read arbitrary memory and execute arbitrary code. This module has been tested successfully with GroupWise Client 2012 on IE6 - IE9. The JRE6 needs to be installed to achieve ASLR bypass.\",\"source\":[\"Metasploit\"],\"description\":\"Novell GroupWise Client gwcls1.dll ActiveX Remote Code Execution\",\"name\":\"exploit\\/windows\\/browser\\/novell_groupwise_gwcls1_actvx\",\"discoveryDate\":1.359504E12,\"_id\":8829440},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack-based buffer overflow in Novell iPrint Client 5.42. When sending an overly long string to the 'call-back-url' parameter in an op-client-interface-version action of ienipp.ocx an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Novell iPrint Client ActiveX Control call-back-url Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/novelliprint_callbackurl\",\"discoveryDate\":1.2822624E12,\"_id\":8830208},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack buffer overflow in Novell iPrint Client 5.30. When passing a specially crafted date\\/time string via certain parameters to ienipp.ocx an attacker can execute arbitrary code.  NOTE: The \\\"operation\\\" variable must be set to a valid command in order to reach this vulnerability.\",\"source\":[\"Metasploit\"],\"description\":\"Novell iPrint Client ActiveX Control Date\\/Time Buffer Overflow\",\"name\":\"exploit\\/windows\\/browser\\/novelliprint_datetime\",\"discoveryDate\":1.2602304E12,\"_id\":8831232}],\"success\":true,\"version\":\"2.5.0\",\"queryTime\":69.429844}"