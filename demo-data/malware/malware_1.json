"{\"count\":3407,\"results\":[{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a flaw in the setDiffICM function in the Sun JVM.  The payload is serialized and passed to the applet via PARAM tags. It must be a native payload.  The effected Java versions are JDK and JRE 6 Update 16 and earlier, JDK and JRE 5.0 Update 21 and earlier, SDK and JRE 1.4.2_23 and earlier, and SDK and JRE 1.3.1_26 and earlier.  NOTE: Although all of the above versions are reportedly vulnerable, only 1.6.0_u11 and 1.6.0_u16 on Windows XP SP3 were tested.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java JRE AWT setDiffICM Buffer Overflow\",\"name\":\"exploit\\/multi\\/browser\\/java_setdifficm_bof\",\"discoveryDate\":1.2572928E12,\"_id\":8527872},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This exploit dynamically creates a .jar file via the Msf::Exploit::Java mixin, then signs the it. The resulting signed applet is presented to the victim via a web page with an applet tag. The victim's JVM will pop a dialog asking if they trust the signed applet.  On older versions the dialog will display the value of CERTCN in the \\\"Publisher\\\" line. Newer JVMs display \\\"UNKNOWN\\\" when the signature is not trusted (i.e., it's not signed by a trusted CA). The SigningCert option allows you to provide a trusted code signing cert, the values in which will override CERTCN. If SigningCert is not given, a randomly generated self-signed cert will be used.  Either way, once the user clicks \\\"run\\\", the applet executes with full user permissions.\",\"source\":[\"Metasploit\"],\"description\":\"Java Signed Applet Social Engineering Code Execution\",\"name\":\"exploit\\/multi\\/browser\\/java_signed_applet\",\"discoveryDate\":8.563104E11,\"_id\":8528384},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in Java Runtime Environment  that allows an untrusted method to run in a privileged context. The  vulnerability affects version 6 prior to update 19 and version 5  prior to update 23.\",\"source\":[\"Metasploit\"],\"description\":\"Java Statement.invoke() Trusted Method Chain Privilege Escalation\",\"name\":\"exploit\\/multi\\/browser\\/java_trusted_chain\",\"discoveryDate\":1.2699936E12,\"_id\":8528640},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in HotSpot bytecode verifier where an invalid optimisation of GETFIELD\\/PUTFIELD\\/GETSTATIC\\/PUTSTATIC instructions leads to insufficent type checks. This allows a way to escape the JRE sandbox, and load additional classes in order to perform malicious operations.\",\"source\":[\"Metasploit\"],\"description\":\"Java Applet Field Bytecode Verifier Cache Remote Code Execution\",\"name\":\"exploit\\/multi\\/browser\\/java_verifier_field_access\",\"discoveryDate\":1.3389408E12,\"_id\":8529152},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in the Mozilla Suite, Mozilla Firefox, and Mozilla Thunderbird applications. This exploit module is a direct port of Aviv Raff's HTML PoC.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Suite\\/Firefox InstallVersion->compareTo() Code Execution\",\"name\":\"exploit\\/multi\\/browser\\/mozilla_compareto\",\"discoveryDate\":1.1212128E12,\"_id\":8529920},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution vulnerability in the Mozilla Suite, Mozilla Firefox, and Mozilla Thunderbird applications. This exploit requires the Java plugin to be installed.\",\"source\":[\"Metasploit\"],\"description\":\"Mozilla Suite\\/Firefox Navigator Object Code Execution\",\"name\":\"exploit\\/multi\\/browser\\/mozilla_navigatorjava\",\"discoveryDate\":1.1537856E12,\"_id\":8530432},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Opera web browser in versions <= 9.10 allows unrestricted script access to its configuration page, opera:config, allowing an attacker to change settings and potentially execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Opera 9 Configuration Overwrite\",\"name\":\"exploit\\/multi\\/browser\\/opera_configoverwrite\",\"discoveryDate\":1.1730528E12,\"_id\":8530944},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Certain constructs are not escaped correctly by Opera's History Search results. These can be used to inject scripts into the page, which can then be used to modify configuration settings and execute arbitrary commands. Affects Opera versions between 9.50 and 9.61.\",\"source\":[\"Metasploit\"],\"description\":\"Opera historysearch XSS\",\"name\":\"exploit\\/multi\\/browser\\/opera_historysearch\",\"discoveryDate\":1.22472E12,\"_id\":8531200},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary memory access vulnerability in the  Quicktime for Java API provided with Quicktime 7.\",\"source\":[\"Metasploit\"],\"description\":\"Apple QTJava toQTPointer() Arbitrary Memory Access\",\"name\":\"exploit\\/multi\\/browser\\/qtjava_pointer\",\"discoveryDate\":1.1772864E12,\"_id\":8531712},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an array overflow in Adobe Reader and Adobe Acrobat. Affected versions include < 7.1.4, < 8.1.7, and < 9.2. By creating a specially crafted pdf that a contains malformed U3D data, an attacker may be able to execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"Adobe U3D CLODProgressiveMeshDeclaration Array Overrun\",\"name\":\"exploit\\/multi\\/fileformat\\/adobe_u3d_meshcont\",\"discoveryDate\":1.255392E12,\"_id\":8532224},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module harnesses Maple's ability to create files and execute commands automatically when opening a Maplet. All versions up to 13 are suspected vulnerable. Testing was conducted with version 13 on Windows. Standard security settings prevent code from running in a normal maple worksheet without user interaction, but those setting do not prevent code in a Maplet from running.  In order for the payload to be executed, an attacker must convince someone to open a specially modified .maplet file with Maple. By doing so, an attacker can execute arbitrary code as the victim user.\",\"source\":[\"Metasploit\"],\"description\":\"Maple Maplet File Creation and Command Execution\",\"name\":\"exploit\\/multi\\/fileformat\\/maple_maplet\",\"discoveryDate\":1.27224E12,\"_id\":8532736},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a command injection vulnerability in PeaZip. All versions prior to 2.6.2 are suspected vulnerable. Testing was conducted with version 2.6.1 on Windows.  In order for the command to be executed, an attacker must convince someone to open a specially crafted zip file with PeaZip, and access the specially file via double-clicking it. By doing so, an attacker can execute arbitrary commands as the victim user.\",\"source\":[\"Metasploit\"],\"description\":\"PeaZip <= 2.6.1 Zip Processing Command Injection\",\"name\":\"exploit\\/multi\\/fileformat\\/peazip_command_injection\",\"discoveryDate\":1.24416E12,\"_id\":8532992},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a format string vulnerability in versions of the Washington University FTP server older than 2.6.1. By executing specially crafted SITE EXEC or SITE INDEX commands containing format specifiers, an attacker can corrupt memory and execute arbitrary code.\",\"source\":[\"Metasploit\"],\"description\":\"WU-FTPD SITE EXEC\\/INDEX Format String Vulnerability\",\"name\":\"exploit\\/multi\\/ftp\\/wuftpd_site_exec_format\",\"discoveryDate\":9.61632E11,\"_id\":8533504},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module is a stub that provides all of the features of the Metasploit payload system to exploits that have been launched outside of the framework.\",\"source\":[\"Metasploit\"],\"description\":\"Generic Payload Handler\",\"name\":\"exploit\\/multi\\/handler\",\"_id\":8534016},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary code injection vulnerability in the chat module that is part of Active Collab by abusing a preg_replace() using the \\/e modifier and its replacement string using double quotes. The vulnerable function can be found in activecollab\\/application\\/modules\\/chat\\/functions\\/html_to_text.php.\",\"source\":[\"Metasploit\"],\"description\":\"Active Collab \\\"chat module\\\" <= 2.3.8 Remote PHP Code Injection Exploit\",\"name\":\"exploit\\/multi\\/http\\/activecollab_chat\",\"discoveryDate\":1.338336E12,\"_id\":8534272},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in the AjaXplorer 'checkInstall.php' script. All versions of AjaXplorer prior to 2.6 are vulnerable.\",\"source\":[\"Metasploit\"],\"description\":\"AjaXplorer checkInstall.php Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/ajaxplorer_checkinstall_exec\",\"discoveryDate\":1.2703392E12,\"_id\":8534528},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in appRain's Content Management Framework (CMF), version 0.1.5 or less. By abusing the uploadify.php file, a malicious user can upload a file to the uploads\\/ directory without any authentication, which results in arbitrary code execution.\",\"source\":[\"Metasploit\"],\"description\":\"appRain CMF Arbitrary PHP File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/apprain_upload_exec\",\"discoveryDate\":1.3269312E12,\"_id\":8534784},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Auxilium RateMyPet's. The site banner uploading feature can be abused to upload an arbitrary file to the web server, which is accessible in the 'banner' directory, thus allowing remote code execution.\",\"source\":[\"Metasploit\"],\"description\":\"Auxilium RateMyPet Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/auxilium_upload_exec\",\"discoveryDate\":1.3475808E12,\"_id\":8535296},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module logs in to an Axis2 Web Admin Module instance using a specific user\\/pass and uploads and executes commands via deploying a malicious web service by using SOAP.\",\"source\":[\"Metasploit\"],\"description\":\"Axis2 \\/ SAP BusinessObjects Authenticated Code Execution (via SOAP)\",\"name\":\"exploit\\/multi\\/http\\/axis2_deployer\",\"discoveryDate\":1.2936672E12,\"_id\":8535552},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in CuteFlow version 2.11.2 or prior. This application has an upload feature that allows an unauthenticated user to upload arbitrary files to the 'upload\\/___1\\/' directory and then execute it.\",\"source\":[\"Metasploit\"],\"description\":\"CuteFlow v2.11.2 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/cuteflow_upload_exec\",\"discoveryDate\":1.3433472E12,\"_id\":8536064},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in lib\\/dbtools.inc which uses unsanitized user input inside a eval() call. Additionally the base64 encoded user credentials are extracted from the database of the application. Please note that in order to be able to steal credentials, the vulnerable service must have at least one USV module (an entry in the \\\"nodes\\\" table in mgedb.db)\",\"source\":[\"Metasploit\"],\"description\":\"Network Shutdown Module <= 3.21 (sort_values) Remote PHP Code Injection\",\"name\":\"exploit\\/multi\\/http\\/eaton_nsm_code_exec\",\"discoveryDate\":1.3406688E12,\"_id\":8536320},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an authentication bypass vulnerability in eXtplorer versions 2.1.0 to 2.1.2 and 2.1.0RC5 when run as a standalone application. This application has an upload feature that allows an authenticated user with administrator roles to upload arbitrary files to any writable directory in the web root. This module uses an authentication bypass vulnerability to upload and execute a file.\",\"source\":[\"Metasploit\"],\"description\":\"eXtplorer v2.1 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/extplorer_upload_exec\",\"discoveryDate\":1.356912E12,\"_id\":8536576},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in Family Connections 2.7.1. It's in the dev\\/less.php script and is due to an insecure use of system(). Authentication isn't required to exploit the vulnerability but register_globals must be set to On.\",\"source\":[\"Metasploit\"],\"description\":\"Family Connections less.php Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/familycms_less_exec\",\"discoveryDate\":1.3225248E12,\"_id\":8536832},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution flaw in FreeNAS 0.7.2 < rev.5543. When passing a specially formatted URL to the exec_raw.php page, an attacker may be able to execute arbitrary commands.  NOTE: This module works best with php\\/meterpreter payloads.\",\"source\":[\"Metasploit\"],\"description\":\"FreeNAS exec_raw.php Arbitrary Command Execution\",\"name\":\"exploit\\/multi\\/http\\/freenas_exec_raw\",\"discoveryDate\":1.2890016E12,\"_id\":8537088},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in gitorious. Unvalidated input is passed to the shell allowing command execution.\",\"source\":[\"Metasploit\"],\"description\":\"Gitorious Arbitrary Command Execution\",\"name\":\"exploit\\/multi\\/http\\/gitorious_graph\",\"discoveryDate\":1.3269312E12,\"_id\":8537344},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module logs in to an GlassFish Server 3.1 (Open Source or Commercial) instance using a default credential, uploads, and executes commands via deploying a malicious WAR. On Glassfish 2.x, 3.0 and Sun Java System Application Server 9.x this module will try to bypass authentication instead by sending lowercase HTTP verbs.\",\"source\":[\"Metasploit\"],\"description\":\"Sun\\/Oracle GlassFish Server Authenticated Code Execution\",\"name\":\"exploit\\/multi\\/http\\/glassfish_deployer\",\"discoveryDate\":1.312416E12,\"_id\":8537600},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a file upload vulnerability in Glossword versions 1.8.8 to 1.8.12 when run as a standalone application. This application has an upload feature that allows an authenticated user with administrator roles to upload arbitrary files to the 'gw_temp\\/a\\/' directory.\",\"source\":[\"Metasploit\"],\"description\":\"Glossword v1.8.8 - 1.8.12 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/glossword_upload_exec\",\"discoveryDate\":1.3600224E12,\"_id\":8538112},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary PHP code execution vulnerability introduced as a backdoor into Horde 3.3.12 and Horde Groupware 1.2.10.\",\"source\":[\"Metasploit\"],\"description\":\"Horde 3.3.12 Backdoor Arbitrary PHP Code Execution\",\"name\":\"exploit\\/multi\\/http\\/horde_href_backdoor\",\"discoveryDate\":1.3290912E12,\"_id\":8538368},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution flaw in HP SiteScope. It exploits two vulnerabilities in order to get its objective. An authentication bypass in the create operation, available through the APIPreferenceImpl AXIS service, to create a new account with empty credentials and, subsequently, uses the new account to abuse the UploadManagerServlet and upload an arbitrary payload embedded in a JSP. The module has been tested successfully on HP SiteScope 11.20 over Windows 2003 SP2 and Linux CentOS 6.3.\",\"source\":[\"Metasploit\"],\"description\":\"HP SiteScope Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/hp_sitescope_uploadfileshandler\",\"discoveryDate\":1.3461984E12,\"_id\":8538880},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module can be used to install a WAR file payload on JBoss servers that have an exposed \\\"jmx-console\\\" application. The payload is put on the server by using the jboss.system:BSHDeployer\\\\'s createScriptDeployment() method.\",\"source\":[\"Metasploit\"],\"description\":\"JBoss JMX Console Beanshell Deployer WAR Upload and Deployment\",\"name\":\"exploit\\/multi\\/http\\/jboss_bshdeployer\",\"discoveryDate\":1.27224E12,\"_id\":8539136},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module uses the DeploymentFileRepository class in JBoss Application Server (jbossas) to deploy a JSP file which then deploys the WAR file.\",\"source\":[\"Metasploit\"],\"description\":\"JBoss Java Class DeploymentFileRepository WAR Deployment\",\"name\":\"exploit\\/multi\\/http\\/jboss_deploymentfilerepository\",\"discoveryDate\":1.27224E12,\"_id\":8539648},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module can be used to execute a payload on JBoss servers that have an exposed HTTPAdaptor's JMX Invoker exposed on the \\\"JMXInvokerServlet\\\". By invoking the methods provided by jboss.admin:DeploymentFileRepository a stager is deployed to finally upload the selected payload to the target. The DeploymentFileRepository methods are only available on Jboss 4.x and 5.x.\",\"source\":[\"Metasploit\"],\"description\":\"JBoss DeploymentFileRepository WAR Deployment (via JMXInvokerServlet)\",\"name\":\"exploit\\/multi\\/http\\/jboss_invoke_deploy\",\"discoveryDate\":1.1719296E12,\"_id\":8539904},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module can be used to execute a payload on JBoss servers that have an exposed \\\"jmx-console\\\" application. The payload is put on the server by using the jboss.system:MainDeployer functionality. To accomplish this, a temporary HTTP server is created to serve a WAR archive containing our payload. This method will only work if the target server allows outbound connections to us.\",\"source\":[\"Metasploit\"],\"description\":\"JBoss JMX Console Deployer Upload and Execute\",\"name\":\"exploit\\/multi\\/http\\/jboss_maindeployer\",\"discoveryDate\":1.1719296E12,\"_id\":8540416},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module uses the Jenkins Groovy script console to execute OS commands using Java.\",\"source\":[\"Metasploit\"],\"description\":\"Jenkins Script-Console Java Execution\",\"name\":\"exploit\\/multi\\/http\\/jenkins_script_console\",\"discoveryDate\":1.3584672E12,\"_id\":8540672},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in Kordil EDMS v2.2.60rc3. This application has an upload feature that allows an unauthenticated user to upload arbitrary files to the '\\/kordil_edms\\/userpictures\\/' directory.\",\"source\":[\"Metasploit\"],\"description\":\"Kordil EDMS v2.2.60rc3 Unauthenticated Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/kordil_edms_upload_exec\",\"discoveryDate\":1.3614912E12,\"_id\":8540928},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Lotus CMS 3.0's Router() function. This is done by embedding PHP code in the 'page' parameter, which will be passed to a eval call, therefore allowing remote code execution.  The module can either automatically pick up a 'page' parameter from the default page, or manually specify one in the URI option. To use the automatic method, please supply the URI with just a directory path, for example: \\\"\\/lcms\\/\\\". To manually configure one, you may do: \\\"\\/lcms\\/somepath\\/index.php?page=index\\\"\",\"source\":[\"Metasploit\"],\"description\":\"LotusCMS 3.0 eval() Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/lcms_php_exec\",\"discoveryDate\":1.2991104E12,\"_id\":8541184},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits the \\\"Ajax File and Image Manager\\\" component that can be found in log1 CMS. In function.base.php of this component, the 'data' parameter in writeInfo() allows any malicious user to have direct control of writing data to file data.php, which results in arbitrary remote code execution.\",\"source\":[\"Metasploit\"],\"description\":\"Log1 CMS writeInfo() PHP Code Injection\",\"name\":\"exploit\\/multi\\/http\\/log1cms_ajax_create_folder\",\"discoveryDate\":1.30248E12,\"_id\":8541440},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a SQL injection found in ManageEngine Security Manager Plus advanced search page, which results in remote code execution under the context of SYSTEM in Windows; or as the user in Linux. Authentication is not required in order to exploit this vulnerability.\",\"source\":[\"Metasploit\"],\"description\":\"ManageEngine Security Manager Plus 5.5 build 5505 SQL Injection\",\"name\":\"exploit\\/multi\\/http\\/manageengine_search_sqli\",\"discoveryDate\":1.3505184E12,\"_id\":8541952},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in MobileCartly. The savepage.php file does not do any permission checks before using file_put_contents(), which allows any user to have direct control of that function to create files under the 'pages' directory by default, or anywhere else as long as the user has WRITE permission.\",\"source\":[\"Metasploit\"],\"description\":\"MobileCartly 1.0 Arbitrary File Creation Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/mobilecartly_upload_exec\",\"discoveryDate\":1.3445568E12,\"_id\":8542208},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module can be used to execute a payload on MoveableType (MT) that exposes a CGI script, mt-upgrade.cgi (usually at \\/mt\\/mt-upgrade.cgi), that is used during installation and updating of the platform. The vulnerability arises due to the following properties: 1. This script may be invoked remotely without requiring authentication to any MT instance. 2. Through a crafted POST request, it is possible to invoke particular database migration functions (i.e functions that bring the existing database up-to-date with an updated codebase) by name and with particular parameters. 3. A particular migration function, core_drop_meta_for_table, allows a class parameter to be set which is used directly in a perl eval statement, allowing perl code injection.\",\"source\":[\"Metasploit\"],\"description\":\"Movable Type 4.2x, 4.3x Web Upgrade Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/movabletype_upgrade_exec\",\"discoveryDate\":1.3575168E12,\"_id\":8542976},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an authenticated command injection vulnerability in the Mutiny appliance. Versions prior to 4.5-1.12 are vulnerable. In order to exploit the vulnerability the mutiny user must have access to the admin interface. The injected commands are executed with root privileges. This module has been tested successfully on Mutiny 4.2-1.05.\",\"source\":[\"Metasploit\"],\"description\":\"Mutiny Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/mutiny_subnetmask_exec\",\"discoveryDate\":1.350864E12,\"_id\":8544512},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in Netwin SurgeFTP, version 23c8 or prior. In order to execute commands via the FTP service, please note that you must have a valid credential to the web-based administrative console.\",\"source\":[\"Metasploit\"],\"description\":\"Netwin SurgeFTP Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/netwin_surgeftp_exec\",\"discoveryDate\":1.354752E12,\"_id\":8545536},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary root command execution vulnerability in the OP5 Monitor license.php. Ekelow has confirmed that OP5 Monitor versions 5.3.5, 5.4.0, 5.4.2, 5.5.0, 5.5.1 are vulnerable.\",\"source\":[\"Metasploit\"],\"description\":\"OP5 license.php Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/op5_license\",\"discoveryDate\":1.3257216E12,\"_id\":8546304},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary root command execution vulnerability in OP5 Monitor welcome. Ekelow AB has confirmed that OP5 Monitor versions 5.3.5, 5.4.0, 5.4.2, 5.5.0, 5.5.1 are vulnerable.\",\"source\":[\"Metasploit\"],\"description\":\"OP5 welcome Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/op5_welcome\",\"discoveryDate\":1.3257216E12,\"_id\":8547328},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an authentication bypass vulnerability in the administration console of Openfire servers. By using this vulnerability it is possible to upload\\/execute a malicious Openfire plugin on the server and execute arbitrary Java code. This module has been tested against Openfire 3.6.0a.  It is possible to remove the uploaded plugin after execution, however this might turn the server in some kind of unstable state, making re-exploitation difficult. You might want to do this manually.\",\"source\":[\"Metasploit\"],\"description\":\"Openfire Admin Console Authentication Bypass\",\"name\":\"exploit\\/multi\\/http\\/openfire_auth_bypass\",\"discoveryDate\":1.2262752E12,\"_id\":8548608},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"When run as a CGI, PHP up to version 5.3.12 and 5.4.2 is vulnerable to an argument injection vulnerability. This module takes advantage of the -d flag to set php.ini directives to achieve code execution. From the advisory: \\\"if there is NO unescaped '=' in the query string, the string is split on '+' (encoded space) characters, urldecoded, passed to a function that escapes shell metacharacters (the \\\"encoded in a system-defined manner\\\" from the RFC) and then passes them to the CGI binary.\\\"\",\"source\":[\"Metasploit\"],\"description\":\"PHP CGI Argument Injection\",\"name\":\"exploit\\/multi\\/http\\/php_cgi_arg_injection\",\"discoveryDate\":1.3360032E12,\"_id\":8549888},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in PHP Volunteer Management System, version v1.0.2 or prior. This application has an upload feature that allows an authenticated user to upload anything to the 'uploads' directory, which is actually reachable by anyone without a credential. An attacker can easily abuse this upload functionality first by logging in with the default credential (admin:volunteer), upload a malicious payload, and then execute it by sending another GET request.\",\"source\":[\"Metasploit\"],\"description\":\"PHP Volunteer Management System v1.0.2 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/php_volunteer_upload_exec\",\"discoveryDate\":1.3381632E12,\"_id\":8550400},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the lib\\/functions.php that allows attackers input parsed directly to the create_function() php function. A patch was issued that uses a whitelist regex expression to check the user supplied input before being parsed to the create_function() call.\",\"source\":[\"Metasploit\"],\"description\":\"phpLDAPadmin <= 1.2.1.1 (query_engine) Remote PHP Code Injection\",\"name\":\"exploit\\/multi\\/http\\/phpldapadmin_query_engine\",\"discoveryDate\":1.3194144E12,\"_id\":8550656},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary code execution backdoor placed into phpMyAdmin v3.5.2.2 thorugh a compromised SourceForge mirror.\",\"source\":[\"Metasploit\"],\"description\":\"phpMyAdmin 3.5.2.2 server_sync.php Backdoor\",\"name\":\"exploit\\/multi\\/http\\/phpmyadmin_3522_backdoor\",\"discoveryDate\":1.3485312E12,\"_id\":8551168},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a PREG_REPLACE_EVAL vulnerability in phpMyAdmin's replace_prefix_tbl within libraries\\/mult_submits.inc.php via db_settings.php This affects versions 3.5.x < 3.5.8.1 and 4.0.0 < 4.0.0-rc3. PHP versions > 5.4.6 are not vulnerable.\",\"source\":[\"Metasploit\"],\"description\":\"phpMyAdmin Authenticated Remote Code Execution via preg_replace()\",\"name\":\"exploit\\/multi\\/http\\/phpmyadmin_preg_replace\",\"discoveryDate\":1.366848E12,\"_id\":8551424},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary PHP code execution flaw in the phpScheduleIt software. This vulnerability is only exploitable when the magic_quotes_gpc PHP option is 'off'. Authentication is not required to exploit the bug.  Version 1.2.10 and earlier of phpScheduleIt are affected.\",\"source\":[\"Metasploit\"],\"description\":\"phpScheduleIt PHP reserve.php start_date Parameter Arbitrary Code Injection\",\"name\":\"exploit\\/multi\\/http\\/phpscheduleit_start_date\",\"discoveryDate\":1.2228192E12,\"_id\":8551936},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in PhpTax, an income tax report generator. When generating a PDF, the icondrawpng() function in drawimage.php does not properly handle the pfilez parameter, which will be used in a exec() statement, and then results in arbitrary remote code execution under the context of the web server. Please note: authentication is not required to exploit this vulnerability.\",\"source\":[\"Metasploit\"],\"description\":\"PhpTax pfilez Parameter Exec Remote Code Injection\",\"name\":\"exploit\\/multi\\/http\\/phptax_exec\",\"discoveryDate\":1.3496544E12,\"_id\":8552448},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"Unspecified vulnerability in Zope 2.12.x and 2.13.x, as used in Plone 4.0.x through 4.0.9, 4.1, and 4.2 through 4.2a2, allows remote attackers to execute arbitrary commands via vectors related to the p_ class in OFS\\/misc_.py and the use of Python modules.\",\"source\":[\"Metasploit\"],\"description\":\"Plone and Zope XMLTools Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/plone_popen2\",\"discoveryDate\":1.3176864E12,\"_id\":8552704},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in PmWiki from 2.0.0 to 2.2.34. The vulnerable function is inside \\/scripts\\/pagelist.php.\",\"source\":[\"Metasploit\"],\"description\":\"PmWiki <= 2.2.34 pagelist.php Remote PHP Code Injection Exploit\",\"name\":\"exploit\\/multi\\/http\\/pmwiki_pagelist\",\"discoveryDate\":1.3207968E12,\"_id\":8553216},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a file upload vulnerability found in PlarPear CMS By abusing the upload.php file, a malicious user can upload a file to a temp directory without authentication, which results in arbitrary code execution.\",\"source\":[\"Metasploit\"],\"description\":\"PolarPearCms PHP File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/polarcms_upload_exec\",\"discoveryDate\":1.327104E12,\"_id\":8553728},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in qdPM - a web-based project management software. The user profile's photo upload feature can be abused to upload any arbitrary file onto the victim server machine, which allows remote code execution. Please note in order to use this module, you must have a valid credential to sign in.\",\"source\":[\"Metasploit\"],\"description\":\"qdPM v7 Arbitrary PHP File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/qdpm_upload_exec\",\"discoveryDate\":1.339632E12,\"_id\":8554240},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a remote code execution vulnerability in the JSON request processor of the Ruby on Rails application framework. This vulnerability allows an attacker to instantiate a remote object, which in turn can be used to execute any ruby code remotely in the context of the application. This vulnerability is very similar to CVE-2013-0156.  This module has been tested successfully on RoR 3.0.9, 3.0.19, and 2.3.15.  The technique used by this module requires the target to be running a fairly recent version of Ruby 1.9 (since 2011 or so). Applications using Ruby 1.8 may still be exploitable using the init_with() method, but this has not been demonstrated.\",\"source\":[\"Metasploit\"],\"description\":\"Ruby on Rails JSON Processor YAML Deserialization Code Execution\",\"name\":\"exploit\\/multi\\/http\\/rails_json_yaml_code_exec\",\"discoveryDate\":1.3593312E12,\"_id\":8554496},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a remote code execution vulnerability in the XML request processor of the Ruby on Rails application framework. This vulnerability allows an attacker to instantiate a remote object, which in turn can be used to execute any ruby code remotely in the context of the application.  This module has been tested across multiple versions of RoR 3.x and RoR 2.x  The technique used by this module requires the target to be running a fairly recent version of Ruby 1.9 (since 2011 or so). Applications using Ruby 1.8 may still be exploitable using the init_with() method, but this has not been demonstrated.\",\"source\":[\"Metasploit\"],\"description\":\"Ruby on Rails XML Processor YAML Deserialization Code Execution\",\"name\":\"exploit\\/multi\\/http\\/rails_xml_yaml_code_exec\",\"discoveryDate\":1.3575168E12,\"_id\":8555008},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits multiple design flaws in Sflog 1.0. By default, the CMS has a default admin credential of \\\"admin:secret\\\", which can be abused to access administrative features such as blogs management. Through the management interface, we can upload a backdoor that's accessible by any remote user, and then gain arbitrary code execution.\",\"source\":[\"Metasploit\"],\"description\":\"Sflog! CMS 1.0 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/sflog_upload_exec\",\"discoveryDate\":1.3415328E12,\"_id\":8555520},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module combines two separate issues within Support Incident Tracker (<= 3.65) application to upload arbitrary data and thus execute a shell. The two issues exist in ftp_upload_file.php. The first vulnerability exposes the upload dir used to store attachments. The second vulnerability allows arbitrary file upload since there is no validation function to prevent from uploading any file type. Authentication is required to exploit both vulnerabilities.\",\"source\":[\"Metasploit\"],\"description\":\"Support Incident Tracker <= 3.65 Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/sit_file_upload\",\"discoveryDate\":1.3208832E12,\"_id\":8555776},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in nmap.php and nbtscan.php scripts.\",\"source\":[\"Metasploit\"],\"description\":\"Snortreport nmap.php\\/nbtscan.php Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/snortreport_exec\",\"discoveryDate\":1.3163904E12,\"_id\":8556544},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution flaw in SonicWALL GMS. It exploits two vulnerabilities in order to get its objective. An authentication bypass in the Web Administration interface allows to abuse the \\\"appliance\\\" application and upload an arbitrary payload embedded in a JSP. The module has been tested successfully on SonicWALL GMS 6.0.6017 over Windows 2003 SP2 and SonicWALL GMS 6.0.6022 Virtual Appliance (Linux). On the Virtual Appliance the linux meterpreter hasn't run successfully while testing, shell payload have been used.\",\"source\":[\"Metasploit\"],\"description\":\"SonicWALL GMS 6 Arbitrary File Upload\",\"name\":\"exploit\\/multi\\/http\\/sonicwall_gms_upload\",\"discoveryDate\":1.3267584E12,\"_id\":8556800},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module abuses a command execution vulnerability in the web based interface of Splunk 4.2 to 4.2.4. The vulnerability exists in the 'mappy' search command which allows attackers to run Python code. To exploit this vulnerability, a valid Splunk user with the admin role is required. By default, this module uses the credential of \\\"admin:changeme\\\", the default Administrator credential for Splunk. Note that the Splunk web interface runs as SYSTEM on Windows and as root on Linux by default.\",\"source\":[\"Metasploit\"],\"description\":\"Splunk Search Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/splunk_mappy_exec\",\"discoveryDate\":1.323648E12,\"_id\":8557312},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a feature of Splunk whereby a custom application can be uploaded through the web based interface. Through the 'script' search command a user can call commands defined in their custom application which includes arbitrary perl or python code. To abuse this behavior, a valid Splunk user with the admin role is required. By default, this module uses the credential of \\\"admin:changeme\\\", the default Administrator credential for Splunk. Note that the Splunk web interface runs as SYSTEM on Windows, or as root on Linux by default. This module has only been tested successfully against Splunk 5.0.\",\"source\":[\"Metasploit\"],\"description\":\"Splunk 5.0 Custom App Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/splunk_upload_app_exec\",\"discoveryDate\":1.348704E12,\"_id\":8557824},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in the Spreecommerce search. Unvalidated input is called via the Ruby send method allowing command execution.\",\"source\":[\"Metasploit\"],\"description\":\"Spreecommerce 0.60.1 Arbitrary Command Execution\",\"name\":\"exploit\\/multi\\/http\\/spree_search_exec\",\"discoveryDate\":1.3177728E12,\"_id\":8558080},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in the Spreecommerce API searchlogic. Unvalidated input is called via the Ruby send method allowing command execution.\",\"source\":[\"Metasploit\"],\"description\":\"Spreecommerce < 0.50.0 Arbitrary Command Execution\",\"name\":\"exploit\\/multi\\/http\\/spree_searchlogic_exec\",\"discoveryDate\":1.3031712E12,\"_id\":8558592},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a remote command execution vulnerability in Apache Struts versions < 2.2.0. This issue is caused by a failure to properly handle unicode characters in OGNL extensive expressions passed to the web server.  By sending a specially crafted request to the Struts application it is possible to bypass the \\\"#\\\" restriction on ParameterInterceptors by using OGNL context variables. Bypassing this restriction allows for the execution of arbitrary Java code.\",\"source\":[\"Metasploit\"],\"description\":\"Apache Struts < 2.2.0 Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/struts_code_exec\",\"discoveryDate\":1.2789792E12,\"_id\":8558848},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a remote command execution vulnerability in Apache Struts versions < 2.2.1.1. This issue is caused because the ExceptionDelegator interprets parameter values as OGNL expressions during certain exception handling for mismatched data types of properties, which allows remote attackers to execute arbitrary Java code via a crafted parameter.\",\"source\":[\"Metasploit\"],\"description\":\"Apache Struts <= 2.2.1.1 Remote Command Execution\",\"name\":\"exploit\\/multi\\/http\\/struts_code_exec_exception_delegator\",\"discoveryDate\":1.325808E12,\"_id\":8559360},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a remote command execution vulnerability in Apache Struts versions < 2.3.1.2. This issue is caused because the ParametersInterceptor allows for the use of parentheses which in turn allows it to interpret parameter values as OGNL expressions during certain exception handling for mismatched data types of properties which allows remote attackers to execute arbitrary Java code via a crafted parameter.\",\"source\":[\"Metasploit\"],\"description\":\"Apache Struts ParametersInterceptor Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/struts_code_exec_parameters\",\"discoveryDate\":1.3174272E12,\"_id\":8559872},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits unauthenticated versions of the \\\"STUNSHELL\\\" web shell. This module works when safe mode is enabled on the web server. This shell is widely used in automated RFI payloads.\",\"source\":[\"Metasploit\"],\"description\":\"STUNSHELL Web Shell Remote PHP Code Execution\",\"name\":\"exploit\\/multi\\/http\\/stunshell_eval\",\"discoveryDate\":1.3639968E12,\"_id\":8560384},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits unauthenticated versions of the \\\"STUNSHELL\\\" web shell. This module works when safe mode is disabled on the web server. This shell is widely used in automated RFI payloads.\",\"source\":[\"Metasploit\"],\"description\":\"STUNSHELL Web Shell Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/stunshell_exec\",\"discoveryDate\":1.3639968E12,\"_id\":8560640},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow in Sun Java Web Server prior to version 7 Update 8. By sending an \\\"OPTIONS\\\" request with an overly long path, attackers can execute arbitrary code. In order to reach the vulnerable code, the attacker must also specify the path to a directory with WebDAV enabled.  This exploit was tested and confirmed to work on Windows XP SP3 without DEP. Versions for other platforms are vulnerable as well.  The vulnerability was originally discovered and disclosed by Evgeny Legerov of Intevydis.\",\"source\":[\"Metasploit\"],\"description\":\"Sun Java System Web Server WebDAV OPTIONS Buffer Overflow\",\"name\":\"exploit\\/multi\\/http\\/sun_jsws_dav_options\",\"discoveryDate\":1.2639456E12,\"_id\":8560896},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in TestLink version 1.9.3 or prior. This application has an upload feature that allows any authenticated user to upload arbitrary files to the '\\/upload_area\\/nodes_hierarchy\\/' directory with a randomized file name. The file name can be retrieved from the database using SQL injection.\",\"source\":[\"Metasploit\"],\"description\":\"TestLink v1.9.3 Arbitrary File Upload Vulnerability\",\"name\":\"exploit\\/multi\\/http\\/testlink_upload_exec\",\"discoveryDate\":1.344816E12,\"_id\":8561408},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module can be used to execute a payload on Apache Tomcat servers that have an exposed \\\"manager\\\" application. The payload is uploaded as a WAR archive containing a jsp application using a PUT request.  The manager application can also be abused using \\/manager\\/html\\/upload, but that method is not implemented in this module.  NOTE: The compatible payload sets vary based on the selected target. For example, you must select the Windows target to use native Windows payloads.\",\"source\":[\"Metasploit\"],\"description\":\"Apache Tomcat Manager Application Deployer Authenticated Code Execution\",\"name\":\"exploit\\/multi\\/http\\/tomcat_mgr_deploy\",\"discoveryDate\":1.2577248E12,\"_id\":8561664},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an arbitrary command execution vulnerability in Traq 2.0 to 2.3. It's in the admincp\\/common.php script.  This function is called in each script located into \\/admicp\\/ directory to make sure the user has admin rights, but this is a broken authorization schema due to the header() function doesn't stop the execution flow. This can be exploited by malicious users to execute admin functionality resulting for e.g. in execution of arbitrary PHP code leveraging of plugins.php functionality.\",\"source\":[\"Metasploit\"],\"description\":\"Traq admincp\\/common.php Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/traq_plugin_exec\",\"discoveryDate\":1.323648E12,\"_id\":8563456},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a lack of authentication in the shell developed by v0pCr3w and is widely reused in automated RFI payloads. This module takes advantage of the shell's various methods to execute commands.\",\"source\":[\"Metasploit\"],\"description\":\"v0pCr3w Web Shell Remote Code Execution\",\"name\":\"exploit\\/multi\\/http\\/v0pcr3w_exec\",\"discoveryDate\":1.3639968E12,\"_id\":8563712},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability in the 'proc_deutf()' function defined in \\/includes\\/functions_vbseocp_abstract.php. User input passed through 'char_repl' POST parameter isn't properly sanitized before being used in a call to preg_replace() function which uses the 'e' modifier. This can be exploited to inject and execute arbitrary code leveraging the PHP's complex curly syntax.\",\"source\":[\"Metasploit\"],\"description\":\"vBSEO <= 3.6.0 proc_deutf() Remote PHP Code Injection\",\"name\":\"exploit\\/multi\\/http\\/vbseo_proc_deutf\",\"discoveryDate\":1.3272768E12,\"_id\":8563968},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in WebPageTest's Upload Feature. By default, the resultimage.php file does not verify the user-supplied item before saving it to disk, and then places this item in the web directory accessable by remote users. This flaw can be abused to gain remote code execution.\",\"source\":[\"Metasploit\"],\"description\":\"WebPageTest Arbitrary PHP File Upload\",\"name\":\"exploit\\/multi\\/http\\/webpagetest_upload_exec\",\"discoveryDate\":1.3421376E12,\"_id\":8564224},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in WikkaWiki. When the spam logging feature is enabled, it is possible to inject PHP code into the spam log file via the UserAgent header , and then request it to execute our payload. There are at least three different ways to trigger spam protection, this module does so by generating 10 fake URLs in a comment (by default, the max_new_comment_urls parameter is 6).  Please note that in order to use the injection, you must manually pick a page first that allows you to add a comment, and then set it as 'PAGE'.\",\"source\":[\"Metasploit\"],\"description\":\"WikkaWiki 1.3.2 Spam Logging PHP Injection\",\"name\":\"exploit\\/multi\\/http\\/wikka_spam_exec\",\"discoveryDate\":1.3226112E12,\"_id\":8564480},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a code execution flaw in Novell ZENworks Configuration Management 10 SP3 and 11 SP2. The vulnerability exists in the ZEnworks Control Center application, allowing an unauthenticated attacker to upload a malicious file outside of the TEMP directory and then make a second request that allows for arbitrary code execution. This module has been tested successfully on Novell ZENworks Configuration Management 10 SP3 and 11 SP2 on Windows 2003 SP2 and SUSE Linux Enterprise Server 10 SP3.\",\"source\":[\"Metasploit\"],\"description\":\"Novell ZENworks Configuration Management Remote Execution\",\"name\":\"exploit\\/multi\\/http\\/zenworks_control_center_upload\",\"discoveryDate\":1.3639104E12,\"_id\":8564992},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote attackers to execute arbitrary code by exploiting the Snort service via crafted SMB traffic. The vulnerability is due to a boundary error within the DCE\\/RPC preprocessor when reassembling SMB Write AndX requests, which may result a stack-based buffer overflow with a specially crafted packet sent on a network that is monitored by Snort.  Vulnerable versions include Snort 2.6.1, 2.7 Beta 1 and SourceFire IDS 4.1, 4.5 and 4.6.  Any host on the Snort network may be used as the remote host. The remote host does not need to be running the SMB service for the exploit to be successful.\",\"source\":[\"Metasploit\"],\"description\":\"Snort 2 DCE\\/RPC preprocessor Buffer Overflow\",\"name\":\"exploit\\/multi\\/ids\\/snort_dce_rpc\",\"discoveryDate\":1.1718432E12,\"_id\":8565504},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module abuses the SVG support to execute Java Code in the Squiggle Browser included in the Batik framework 1.7 through a crafted SVG file referencing a jar file.  In order to gain arbitrary code execution, the browser must meet the following conditions: (1) It must support at least SVG version 1.1 or newer, (2) It must support Java code and (3) The \\\"Enforce secure scripting\\\" check must be disabled.  The module has been tested against Windows and Linux platforms.\",\"source\":[\"Metasploit\"],\"description\":\"Squiggle 1.7 SVG Browser Java Code Execution\",\"name\":\"exploit\\/multi\\/misc\\/batik_svg_java\",\"discoveryDate\":1.3366944E12,\"_id\":8566016},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a vulnerability found in HP's StorageWorks P4000 VSA on versions prior to 9.5. By using a default account credential, it is possible to inject arbitrary commands as part of a ping request via port 13838.\",\"source\":[\"Metasploit\"],\"description\":\"HP StorageWorks P4000 Virtual SAN Appliance Command Execution\",\"name\":\"exploit\\/multi\\/misc\\/hp_vsa_exec\",\"discoveryDate\":1.3209696E12,\"_id\":8566272},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module abuses the \\\"RunScript\\\" procedure provided by the SOAP interface of Adobe InDesign Server, to execute abritary vbscript (Windows) or applescript(OSX).  The exploit drops the payload on the server and must be removed manually.\",\"source\":[\"Metasploit\"],\"description\":\"Adobe IndesignServer 5.5 SOAP Server Arbitrary Script Execution\",\"name\":\"exploit\\/multi\\/misc\\/indesign_server_soap\",\"discoveryDate\":1.352592E12,\"_id\":8566528},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module takes advantage of the default configuration of the RMI Registry and RMI Activation services, which allow loading classes from any remote (HTTP) URL. As it invokes a method in the RMI Distributed Garbage Collector which is available via every RMI endpoint, it can be used against both rmiregistry and rmid, and against most other (custom) RMI endpoints as well.  Note that it does not work against Java Management Extension (JMX) ports since those do not support remote class loading, unless another RMI endpoint is active in the same Java process.  RMI method calls do not support or require any sort of authentication.\",\"source\":[\"Metasploit\"],\"description\":\"Java RMI Server Insecure Default Configuration Java Code Execution\",\"name\":\"exploit\\/multi\\/misc\\/java_rmi_server\",\"discoveryDate\":1.3186368E12,\"_id\":8566784},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module uses a vulnerability in the OpenView Omniback II service to execute arbitrary commands. This vulnerability was discovered by DiGiT and his code was used as the basis for this module.  For Microsoft Windows targets, due to module limitations, use the \\\"unix\\/cmd\\/generic\\\" payload and set CMD to your command. You can only pass a small amount of characters (4) to the command line on Windows.\",\"source\":[\"Metasploit\"],\"description\":\"HP OpenView OmniBack II Command Execution\",\"name\":\"exploit\\/multi\\/misc\\/openview_omniback_exec\",\"discoveryDate\":9.833184E11,\"_id\":8567040},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote command execution on the PHP IRC bot pbot by abusing the usage of eval() in the implementation of the .php command. In order to work, the data to connect to the IRC server and channel where find pbot must be provided. The module has been successfully tested on the version of pbot analyzed by Jay Turla, and published on Infosec Institute, running over Ubuntu 10.04 and Windows XP SP3.\",\"source\":[\"Metasploit\"],\"description\":\"PHP IRC Bot pbot eval() Remote Code Execution\",\"name\":\"exploit\\/multi\\/misc\\/pbot_exec\",\"discoveryDate\":1.25712E12,\"_id\":8568064},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows remote command execution on the PHP IRC bot Ra1NX by using the public call feature in private message to covertly bypass the authentication system.\",\"source\":[\"Metasploit\"],\"description\":\"Ra1NX PHP Bot PubCall Authentication Bypass Remote Code Execution\",\"name\":\"exploit\\/multi\\/misc\\/ra1nx_pubcall_exec\",\"discoveryDate\":1.3640832E12,\"_id\":8568576},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module allows arbitrary command execution on an ephemeral port opened by Veritas NetBackup, whilst an administrator is authenticated. The port is opened and allows direct console access as root or SYSTEM from any source address.\",\"source\":[\"Metasploit\"],\"description\":\"VERITAS NetBackup Remote Command Execution\",\"name\":\"exploit\\/multi\\/misc\\/veritas_netbackup_cmdexec\",\"discoveryDate\":1.0983168E12,\"_id\":8569088},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"The LWRES dissector in Wireshark version 0.9.15 through 1.0.10 and 1.2.0 through 1.2.5 allows remote attackers to execute arbitrary code due to a stack-based buffer overflow. This bug found and reported by babi.  This particular exploit targets the dissect_getaddrsbyname_request function. Several other functions also contain potentially exploitable stack-based buffer overflows.  The Windows version (of 1.2.5 at least) is compiled with \\/GS, which prevents exploitation via the return address on the stack. Sending a larger string allows exploitation using the SEH bypass method. However, this packet will usually get fragmented, which may cause additional complications.  NOTE: The vulnerable code is reached only when the packet dissection is rendered. If the packet is fragmented, all fragments must be captured and reassembled to exploit this issue.\",\"source\":[\"Metasploit\"],\"description\":\"Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow\",\"name\":\"exploit\\/multi\\/misc\\/wireshark_lwres_getaddrbyname\",\"discoveryDate\":1.2645504E12,\"_id\":8570112},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"The LWRES dissector in Wireshark version 0.9.15 through 1.0.10 and 1.2.0 through 1.2.5 allows remote attackers to execute arbitrary code due to a stack-based buffer overflow. This bug found and reported by babi.  This particular exploit targets the dissect_getaddrsbyname_request function. Several other functions also contain potentially exploitable stack-based buffer overflows.  The Windows version (of 1.2.5 at least) is compiled with \\/GS, which prevents exploitation via the return address on the stack. Sending a larger string allows exploitation using the SEH bypass method. However, this packet will usually get fragmented, which may cause additional complications.  NOTE: The vulnerable code is reached only when the packet dissection is rendered. If the packet is fragmented, all fragments must be captured and reassembled to exploit this issue.  This version loops, sending the packet every X seconds until the job is killed.\",\"source\":[\"Metasploit\"],\"description\":\"Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow (loop)\",\"name\":\"exploit\\/multi\\/misc\\/wireshark_lwres_getaddrbyname_loop\",\"discoveryDate\":1.2645504E12,\"_id\":8570624},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module takes advantage of a trust relationship issue within the Zend Server Java Bridge. The Java Bridge is responsible for handling interactions between PHP and Java code within Zend Server.  When Java code is encountered Zend Server communicates with the Java Bridge. The Java Bridge then handles the java code and creates the objects within the Java Virtual Machine. This interaction however, does not require any sort of authentication. This leaves the JVM wide open to remote attackers. Sending specially crafted data to the Java Bridge results in the execution of arbitrary java code.\",\"source\":[\"Metasploit\"],\"description\":\"Zend Server Java Bridge Arbitrary Java Code Execution\",\"name\":\"exploit\\/multi\\/misc\\/zend_java_bridge\",\"discoveryDate\":1.3012704E12,\"_id\":8570880},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a stack based buffer overflow in the ntpd and xntpd service. By sending an overly long 'readvar' request it is possible to execute code remotely. As the stack is corrupted, this module uses the Egghunter technique.\",\"source\":[\"Metasploit\"],\"description\":\"NTP daemon readvar Buffer Overflow\",\"name\":\"exploit\\/multi\\/ntp\\/ntp_overflow\",\"discoveryDate\":9.863424E11,\"_id\":8571136},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits an integer overflow vulnerability in the unserialize() function of the PHP web server extension. This vulnerability was patched by Stefan in version 4.5.0 and applies all previous versions supporting this function. This particular module targets numerous web applications and is based on the proof of concept provided by Stefan Esser. This vulnerability requires approximately 900k of data to trigger due the multiple Cookie headers requirement. Since we are already assuming a fast network connection, we use a 2Mb block of shellcode for the brute force, allowing quick exploitation for those with fast networks.  One of the neat things about this vulnerability is that on x86 systems, the EDI register points into the beginning of the hashtable string. This can be used with an egghunter to quickly exploit systems where the location of a valid \\\"jmp EDI\\\" or \\\"call EDI\\\" instruction is known. The EDI method is faster, but the bandwidth-intensive brute force used by this module is more reliable across a wider range of systems.\",\"source\":[\"Metasploit\"],\"description\":\"PHP 4 unserialize() ZVAL Reference Counter Overflow (Cookie)\",\"name\":\"exploit\\/multi\\/php\\/php_unserialize_zval_cookie\",\"discoveryDate\":1.1729664E12,\"_id\":8571648},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a buffer overflow in RealServer 7\\/8\\/9 and was based on Johnny Cyberpunk's THCrealbad exploit. This code should reliably exploit Linux, BSD, and Windows-based servers.\",\"source\":[\"Metasploit\"],\"description\":\"RealServer Describe Buffer Overflow\",\"name\":\"exploit\\/multi\\/realserver\\/describe\",\"discoveryDate\":1.0403424E12,\"_id\":8572416},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module attempts to exploit a buffer overflow vulnerability present in versions 2.2.2 through 2.2.6 of Samba.  The Samba developers report this as: \\\"Bug in the length checking for encrypted password change requests from clients.\\\"  The bug was discovered and reported by the Debian Samba Maintainers.\",\"source\":[\"Metasploit\"],\"description\":\"Samba 2.2.2 - 2.2.6 nttrans Buffer Overflow\",\"name\":\"exploit\\/multi\\/samba\\/nttrans\",\"discoveryDate\":1.0496736E12,\"_id\":8573440},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module exploits a command execution vulerability in Samba versions 3.0.20 through 3.0.25rc3 when using the non-default \\\"username map script\\\" configuration option. By specifying a username containing shell meta characters, attackers can execute arbitrary commands.  No authentication is needed to exploit this vulnerability since this option is used to map usernames prior to authentication!\",\"source\":[\"Metasploit\"],\"description\":\"Samba \\\"username map script\\\" Command Execution\",\"name\":\"exploit\\/multi\\/samba\\/usermap_script\",\"discoveryDate\":1.1791008E12,\"_id\":8574464},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module executes an arbitrary payload through the SAP Management Console SOAP Interface. A valid username and password for the SAP Management Console must be provided. This module has been tested successfully on both Windows and Linux platforms running SAP Netweaver. In order to exploit a Linux platform, the target system must have available the wget command.\",\"source\":[\"Metasploit\"],\"description\":\"SAP Management Console OSExecute Payload Execution\",\"name\":\"exploit\\/multi\\/sap\\/sap_mgmt_con_osexec_payload\",\"discoveryDate\":1.2995424E12,\"_id\":8576256},{\"vertexType\":\"malware\",\"_type\":\"vertex\",\"malwareType\":[\"exploit\"],\"details\":\"This module abuses the SAP NetWeaver SXPG_CALL_SYSTEM function, on the SAP SOAP RFC Service, to execute remote commands. This module needs SAP credentials with privileges to use the \\/sap\\/bc\\/soap\\/rfc in order to work. The module has been tested successfully on Windows 2008 64-bit and Linux 64-bit platforms.\",\"source\":[\"Metasploit\"],\"description\":\"SAP SOAP RFC SXPG_CALL_SYSTEM Remote Command Execution\",\"name\":\"exploit\\/multi\\/sap\\/sap_soap_rfc_sxpg_call_system_exec\",\"discoveryDate\":1.364256E12,\"_id\":8576768}],\"success\":true,\"version\":\"2.5.0\",\"queryTime\":83.4813}"